// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/osconfig/v1alpha2/patch_jobs.proto

package osconfig

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/iam/v1"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Overall state of the patch job.
type ReportPatchJobInstanceDetailsResponse_PatchJobState int32

const (
	// Unspecified is invalid.
	ReportPatchJobInstanceDetailsResponse_PATCH_JOB_STATE_UNSPECIFIED ReportPatchJobInstanceDetailsResponse_PatchJobState = 0
	// The patch job is running. Instances will continue to run patch
	// job steps.
	ReportPatchJobInstanceDetailsResponse_ACTIVE ReportPatchJobInstanceDetailsResponse_PatchJobState = 1
	// The patch job is complete.
	ReportPatchJobInstanceDetailsResponse_COMPLETED ReportPatchJobInstanceDetailsResponse_PatchJobState = 2
)

var ReportPatchJobInstanceDetailsResponse_PatchJobState_name = map[int32]string{
	0: "PATCH_JOB_STATE_UNSPECIFIED",
	1: "ACTIVE",
	2: "COMPLETED",
}

var ReportPatchJobInstanceDetailsResponse_PatchJobState_value = map[string]int32{
	"PATCH_JOB_STATE_UNSPECIFIED": 0,
	"ACTIVE":                      1,
	"COMPLETED":                   2,
}

func (x ReportPatchJobInstanceDetailsResponse_PatchJobState) String() string {
	return proto.EnumName(ReportPatchJobInstanceDetailsResponse_PatchJobState_name, int32(x))
}

func (ReportPatchJobInstanceDetailsResponse_PatchJobState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{6, 0}
}

// Enumeration of the various states a patch job passes through as it
// executes.
type PatchJob_State int32

const (
	// State must be specified.
	PatchJob_STATE_UNSPECIFIED PatchJob_State = 0
	// The patch job was successfully initiated.
	PatchJob_STARTED PatchJob_State = 1
	// The patch job is looking up instances to run the patch on.
	PatchJob_INSTANCE_LOOKUP PatchJob_State = 2
	// Instances are being patched.
	PatchJob_PATCHING PatchJob_State = 3
	// Patch job completed successfully.
	PatchJob_SUCCEEDED PatchJob_State = 4
	// Patch job completed but there were errors.
	PatchJob_COMPLETED_WITH_ERRORS PatchJob_State = 5
	// The patch job was canceled.
	PatchJob_CANCELED PatchJob_State = 6
	// The patch job has timed out.
	PatchJob_TIMED_OUT PatchJob_State = 7
)

var PatchJob_State_name = map[int32]string{
	0: "STATE_UNSPECIFIED",
	1: "STARTED",
	2: "INSTANCE_LOOKUP",
	3: "PATCHING",
	4: "SUCCEEDED",
	5: "COMPLETED_WITH_ERRORS",
	6: "CANCELED",
	7: "TIMED_OUT",
}

var PatchJob_State_value = map[string]int32{
	"STATE_UNSPECIFIED":     0,
	"STARTED":               1,
	"INSTANCE_LOOKUP":       2,
	"PATCHING":              3,
	"SUCCEEDED":             4,
	"COMPLETED_WITH_ERRORS": 5,
	"CANCELED":              6,
	"TIMED_OUT":             7,
}

func (x PatchJob_State) String() string {
	return proto.EnumName(PatchJob_State_name, int32(x))
}

func (PatchJob_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{9, 0}
}

// Post-patch reboot settings.
type PatchConfig_RebootConfig int32

const (
	// The default behavior is DEFAULT.
	PatchConfig_REBOOT_CONFIG_UNSPECIFIED PatchConfig_RebootConfig = 0
	// The agent will decide if a reboot is necessary by checking well known
	// signals such as registry keys on Windows or `/var/run/reboot-required` on
	// APT based systems. On RPM based systems a set of core system package
	// install times will be compared with system boot time.
	PatchConfig_DEFAULT PatchConfig_RebootConfig = 1
	// Always reboot the machine after the update has completed.
	PatchConfig_ALWAYS PatchConfig_RebootConfig = 2
	// Never reboot the machine after the update has completed.
	PatchConfig_NEVER PatchConfig_RebootConfig = 3
)

var PatchConfig_RebootConfig_name = map[int32]string{
	0: "REBOOT_CONFIG_UNSPECIFIED",
	1: "DEFAULT",
	2: "ALWAYS",
	3: "NEVER",
}

var PatchConfig_RebootConfig_value = map[string]int32{
	"REBOOT_CONFIG_UNSPECIFIED": 0,
	"DEFAULT":                   1,
	"ALWAYS":                    2,
	"NEVER":                     3,
}

func (x PatchConfig_RebootConfig) String() string {
	return proto.EnumName(PatchConfig_RebootConfig_name, int32(x))
}

func (PatchConfig_RebootConfig) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{10, 0}
}

// Patch state of an instance.
type Instance_PatchState int32

const (
	// Unspecified.
	Instance_PATCH_STATE_UNSPECIFIED Instance_PatchState = 0
	// The instance has not been notified yet.
	Instance_PENDING Instance_PatchState = 1
	// Instance is inactive and cannot be patched.
	Instance_INACTIVE Instance_PatchState = 2
	// The instance has been notified that it should patch.
	Instance_NOTIFIED Instance_PatchState = 3
	// The instance has started the patching process.
	Instance_STARTED Instance_PatchState = 4
	// The instance is downloading patches.
	Instance_DOWNLOADING_PATCHES Instance_PatchState = 5
	// The instance is applying patches.
	Instance_APPLYING_PATCHES Instance_PatchState = 6
	// The instance is rebooting.
	Instance_REBOOTING Instance_PatchState = 7
	// The instance has completed applying patches.
	Instance_SUCCEEDED Instance_PatchState = 8
	// The instance has completed applying patches but a reboot is required.
	Instance_SUCCEEDED_REBOOT_REQUIRED Instance_PatchState = 9
	// The instance has failed to apply the patch.
	Instance_FAILED Instance_PatchState = 10
	// The instance acked the notification and will start shortly.
	Instance_ACKED Instance_PatchState = 11
	// The instance exceeded the time out while applying the patch.
	Instance_TIMED_OUT Instance_PatchState = 12
	// The instance is running the pre-patch step.
	Instance_RUNNING_PRE_PATCH_STEP Instance_PatchState = 13
	// The instance is running the post-patch step.
	Instance_RUNNING_POST_PATCH_STEP Instance_PatchState = 14
)

var Instance_PatchState_name = map[int32]string{
	0:  "PATCH_STATE_UNSPECIFIED",
	1:  "PENDING",
	2:  "INACTIVE",
	3:  "NOTIFIED",
	4:  "STARTED",
	5:  "DOWNLOADING_PATCHES",
	6:  "APPLYING_PATCHES",
	7:  "REBOOTING",
	8:  "SUCCEEDED",
	9:  "SUCCEEDED_REBOOT_REQUIRED",
	10: "FAILED",
	11: "ACKED",
	12: "TIMED_OUT",
	13: "RUNNING_PRE_PATCH_STEP",
	14: "RUNNING_POST_PATCH_STEP",
}

var Instance_PatchState_value = map[string]int32{
	"PATCH_STATE_UNSPECIFIED":   0,
	"PENDING":                   1,
	"INACTIVE":                  2,
	"NOTIFIED":                  3,
	"STARTED":                   4,
	"DOWNLOADING_PATCHES":       5,
	"APPLYING_PATCHES":          6,
	"REBOOTING":                 7,
	"SUCCEEDED":                 8,
	"SUCCEEDED_REBOOT_REQUIRED": 9,
	"FAILED":                    10,
	"ACKED":                     11,
	"TIMED_OUT":                 12,
	"RUNNING_PRE_PATCH_STEP":    13,
	"RUNNING_POST_PATCH_STEP":   14,
}

func (x Instance_PatchState) String() string {
	return proto.EnumName(Instance_PatchState_name, int32(x))
}

func (Instance_PatchState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{11, 0}
}

// Apt patch type.
type AptSettings_Type int32

const (
	// By default, a full upgrade will be performed.
	AptSettings_TYPE_UNSPECIFIED AptSettings_Type = 0
	// run `apt-get dist-upgrade` instead.
	AptSettings_DIST AptSettings_Type = 1
)

var AptSettings_Type_name = map[int32]string{
	0: "TYPE_UNSPECIFIED",
	1: "DIST",
}

var AptSettings_Type_value = map[string]int32{
	"TYPE_UNSPECIFIED": 0,
	"DIST":             1,
}

func (x AptSettings_Type) String() string {
	return proto.EnumName(AptSettings_Type_name, int32(x))
}

func (AptSettings_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{13, 0}
}

// Microsoft Windows update classifications as defined in
// [1]
// https://support.microsoft.com/en-us/help/824684/description-of-the-standard-terminology-that-is-used-to-describe-micro
type WindowsUpdateSettings_Classification int32

const (
	// Invalid. If classifications are included, they must be specified.
	WindowsUpdateSettings_CLASSIFICATION_UNSPECIFIED WindowsUpdateSettings_Classification = 0
	// "A widely released fix for a specific problem that addresses a critical,
	// non-security-related bug." [1]
	WindowsUpdateSettings_CRITICAL WindowsUpdateSettings_Classification = 1
	// "A widely released fix for a product-specific, security-related
	// vulnerability. Security vulnerabilities are rated by their severity. The
	// severity rating is indicated in the Microsoft security bulletin as
	// critical, important, moderate, or low." [1]
	WindowsUpdateSettings_SECURITY WindowsUpdateSettings_Classification = 2
	// "A widely released and frequent software update that contains additions
	// to a productâ€™s definition database. Definition databases are often used
	// to detect objects that have specific attributes, such as malicious code,
	// phishing websites, or junk mail." [1]
	WindowsUpdateSettings_DEFINITION WindowsUpdateSettings_Classification = 3
	// "Software that controls the input and output of a device." [1]
	WindowsUpdateSettings_DRIVER WindowsUpdateSettings_Classification = 4
	// "New product functionality that is first distributed outside the context
	// of a product release and that is typically included in the next full
	// product release." [1]
	WindowsUpdateSettings_FEATURE_PACK WindowsUpdateSettings_Classification = 5
	// "A tested, cumulative set of all hotfixes, security updates, critical
	// updates, and updates. Additionally, service packs may contain additional
	// fixes for problems that are found internally since the release of the
	// product. Service packs my also contain a limited number of
	// customer-requested design changes or features." [1]
	WindowsUpdateSettings_SERVICE_PACK WindowsUpdateSettings_Classification = 6
	// "A utility or feature that helps complete a task or set of tasks." [1]
	WindowsUpdateSettings_TOOL WindowsUpdateSettings_Classification = 7
	// "A tested, cumulative set of hotfixes, security updates, critical
	// updates, and updates that are packaged together for easy deployment. A
	// rollup generally targets a specific area, such as security, or a
	// component of a product, such as Internet Information Services (IIS)." [1]
	WindowsUpdateSettings_UPDATE_ROLLUP WindowsUpdateSettings_Classification = 8
	// "A widely released fix for a specific problem. An update addresses a
	// noncritical, non-security-related bug." [1]
	WindowsUpdateSettings_UPDATE WindowsUpdateSettings_Classification = 9
)

var WindowsUpdateSettings_Classification_name = map[int32]string{
	0: "CLASSIFICATION_UNSPECIFIED",
	1: "CRITICAL",
	2: "SECURITY",
	3: "DEFINITION",
	4: "DRIVER",
	5: "FEATURE_PACK",
	6: "SERVICE_PACK",
	7: "TOOL",
	8: "UPDATE_ROLLUP",
	9: "UPDATE",
}

var WindowsUpdateSettings_Classification_value = map[string]int32{
	"CLASSIFICATION_UNSPECIFIED": 0,
	"CRITICAL":                   1,
	"SECURITY":                   2,
	"DEFINITION":                 3,
	"DRIVER":                     4,
	"FEATURE_PACK":               5,
	"SERVICE_PACK":               6,
	"TOOL":                       7,
	"UPDATE_ROLLUP":              8,
	"UPDATE":                     9,
}

func (x WindowsUpdateSettings_Classification) String() string {
	return proto.EnumName(WindowsUpdateSettings_Classification_name, int32(x))
}

func (WindowsUpdateSettings_Classification) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{17, 0}
}

// The interpreter used to execute the a file.
type ExecStepConfig_Interpreter int32

const (
	// Default value.
	ExecStepConfig_INTERPRETER_UNSPECIFIED ExecStepConfig_Interpreter = 0
	// Indicates that the script will be run with /bin/sh on Linux and cmd
	// on windows.
	ExecStepConfig_SHELL ExecStepConfig_Interpreter = 1
	// Indicates that the file will be run with PowerShell.
	ExecStepConfig_POWERSHELL ExecStepConfig_Interpreter = 2
)

var ExecStepConfig_Interpreter_name = map[int32]string{
	0: "INTERPRETER_UNSPECIFIED",
	1: "SHELL",
	2: "POWERSHELL",
}

var ExecStepConfig_Interpreter_value = map[string]int32{
	"INTERPRETER_UNSPECIFIED": 0,
	"SHELL":                   1,
	"POWERSHELL":              2,
}

func (x ExecStepConfig_Interpreter) String() string {
	return proto.EnumName(ExecStepConfig_Interpreter_name, int32(x))
}

func (ExecStepConfig_Interpreter) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{20, 0}
}

// A request message to initiate patching across GCE instances.
type ExecutePatchJobRequest struct {
	// The project in which to run this patch in the form `projects/*`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Description of the PatchJob. Length of the description is limited
	// to 1024 characters.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Required. There must be at least one instance to patch for this job
	// to succeed. This is the same filter used when listing compute instances.
	Filter string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	// Optional. Patch configuration being applied. If omitted, instances will be
	// patched using the default configurations.
	PatchConfig *PatchConfig `protobuf:"bytes,4,opt,name=patch_config,json=patchConfig,proto3" json:"patch_config,omitempty"`
	// Optional. Duration of the patch job. After the duration ends, the
	// patch job will time out.
	Duration *duration.Duration `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	// Should this patch be a dry-run only.  Instances will be contacted, but
	// they will do nothing.
	DryRun               bool     `protobuf:"varint,6,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecutePatchJobRequest) Reset()         { *m = ExecutePatchJobRequest{} }
func (m *ExecutePatchJobRequest) String() string { return proto.CompactTextString(m) }
func (*ExecutePatchJobRequest) ProtoMessage()    {}
func (*ExecutePatchJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{0}
}

func (m *ExecutePatchJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutePatchJobRequest.Unmarshal(m, b)
}
func (m *ExecutePatchJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutePatchJobRequest.Marshal(b, m, deterministic)
}
func (m *ExecutePatchJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutePatchJobRequest.Merge(m, src)
}
func (m *ExecutePatchJobRequest) XXX_Size() int {
	return xxx_messageInfo_ExecutePatchJobRequest.Size(m)
}
func (m *ExecutePatchJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutePatchJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutePatchJobRequest proto.InternalMessageInfo

func (m *ExecutePatchJobRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ExecutePatchJobRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ExecutePatchJobRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ExecutePatchJobRequest) GetPatchConfig() *PatchConfig {
	if m != nil {
		return m.PatchConfig
	}
	return nil
}

func (m *ExecutePatchJobRequest) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *ExecutePatchJobRequest) GetDryRun() bool {
	if m != nil {
		return m.DryRun
	}
	return false
}

// Request to get an active or completed patch job.
type GetPatchJobRequest struct {
	// Name of the patch in the form `projects/*/patchJobs/*`
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPatchJobRequest) Reset()         { *m = GetPatchJobRequest{} }
func (m *GetPatchJobRequest) String() string { return proto.CompactTextString(m) }
func (*GetPatchJobRequest) ProtoMessage()    {}
func (*GetPatchJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{1}
}

func (m *GetPatchJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPatchJobRequest.Unmarshal(m, b)
}
func (m *GetPatchJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPatchJobRequest.Marshal(b, m, deterministic)
}
func (m *GetPatchJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPatchJobRequest.Merge(m, src)
}
func (m *GetPatchJobRequest) XXX_Size() int {
	return xxx_messageInfo_GetPatchJobRequest.Size(m)
}
func (m *GetPatchJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPatchJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPatchJobRequest proto.InternalMessageInfo

func (m *GetPatchJobRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request to list the instances' details for a patch job.
type ListPatchJobInstanceDetailsRequest struct {
	// In the form of `projects/*/patchJobs/*`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The maximum number of instance details records to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A pagination token returned from a previous call
	// that indicates where this listing should continue from.
	// This field is optional.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters results listed in the response. Supports
	// filtering results by instance zone, name, state, or failure_reason.
	Filter               string   `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPatchJobInstanceDetailsRequest) Reset()         { *m = ListPatchJobInstanceDetailsRequest{} }
func (m *ListPatchJobInstanceDetailsRequest) String() string { return proto.CompactTextString(m) }
func (*ListPatchJobInstanceDetailsRequest) ProtoMessage()    {}
func (*ListPatchJobInstanceDetailsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{2}
}

func (m *ListPatchJobInstanceDetailsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPatchJobInstanceDetailsRequest.Unmarshal(m, b)
}
func (m *ListPatchJobInstanceDetailsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPatchJobInstanceDetailsRequest.Marshal(b, m, deterministic)
}
func (m *ListPatchJobInstanceDetailsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPatchJobInstanceDetailsRequest.Merge(m, src)
}
func (m *ListPatchJobInstanceDetailsRequest) XXX_Size() int {
	return xxx_messageInfo_ListPatchJobInstanceDetailsRequest.Size(m)
}
func (m *ListPatchJobInstanceDetailsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPatchJobInstanceDetailsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPatchJobInstanceDetailsRequest proto.InternalMessageInfo

func (m *ListPatchJobInstanceDetailsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListPatchJobInstanceDetailsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListPatchJobInstanceDetailsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListPatchJobInstanceDetailsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

// A response message for listing the instances' details for a patch job.
type ListPatchJobInstanceDetailsResponse struct {
	// The list of instance status.
	PatchJobInstanceDetails []*PatchJobInstanceDetails `protobuf:"bytes,1,rep,name=patch_job_instance_details,json=patchJobInstanceDetails,proto3" json:"patch_job_instance_details,omitempty"`
	// A pagination token that can be used to get the next page of results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPatchJobInstanceDetailsResponse) Reset()         { *m = ListPatchJobInstanceDetailsResponse{} }
func (m *ListPatchJobInstanceDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*ListPatchJobInstanceDetailsResponse) ProtoMessage()    {}
func (*ListPatchJobInstanceDetailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{3}
}

func (m *ListPatchJobInstanceDetailsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPatchJobInstanceDetailsResponse.Unmarshal(m, b)
}
func (m *ListPatchJobInstanceDetailsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPatchJobInstanceDetailsResponse.Marshal(b, m, deterministic)
}
func (m *ListPatchJobInstanceDetailsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPatchJobInstanceDetailsResponse.Merge(m, src)
}
func (m *ListPatchJobInstanceDetailsResponse) XXX_Size() int {
	return xxx_messageInfo_ListPatchJobInstanceDetailsResponse.Size(m)
}
func (m *ListPatchJobInstanceDetailsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPatchJobInstanceDetailsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPatchJobInstanceDetailsResponse proto.InternalMessageInfo

func (m *ListPatchJobInstanceDetailsResponse) GetPatchJobInstanceDetails() []*PatchJobInstanceDetails {
	if m != nil {
		return m.PatchJobInstanceDetails
	}
	return nil
}

func (m *ListPatchJobInstanceDetailsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Patch details of an instance.
type PatchJobInstanceDetails struct {
	// The instance name in the form `projects/*/zones/*/instances/*`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The unique, system-generated identifier for the instance.
	InstanceSystemId string `protobuf:"bytes,2,opt,name=instance_system_id,json=instanceSystemId,proto3" json:"instance_system_id,omitempty"`
	// Current state of instance patch.
	State Instance_PatchState `protobuf:"varint,3,opt,name=state,proto3,enum=google.cloud.osconfig.v1alpha2.Instance_PatchState" json:"state,omitempty"`
	// If the patch has failed, this is the reason.
	FailureReason string `protobuf:"bytes,4,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	// Number of times the agent attempted to apply the patch.
	AttemptCount         int64    `protobuf:"varint,5,opt,name=attempt_count,json=attemptCount,proto3" json:"attempt_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PatchJobInstanceDetails) Reset()         { *m = PatchJobInstanceDetails{} }
func (m *PatchJobInstanceDetails) String() string { return proto.CompactTextString(m) }
func (*PatchJobInstanceDetails) ProtoMessage()    {}
func (*PatchJobInstanceDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{4}
}

func (m *PatchJobInstanceDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatchJobInstanceDetails.Unmarshal(m, b)
}
func (m *PatchJobInstanceDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatchJobInstanceDetails.Marshal(b, m, deterministic)
}
func (m *PatchJobInstanceDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatchJobInstanceDetails.Merge(m, src)
}
func (m *PatchJobInstanceDetails) XXX_Size() int {
	return xxx_messageInfo_PatchJobInstanceDetails.Size(m)
}
func (m *PatchJobInstanceDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_PatchJobInstanceDetails.DiscardUnknown(m)
}

var xxx_messageInfo_PatchJobInstanceDetails proto.InternalMessageInfo

func (m *PatchJobInstanceDetails) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PatchJobInstanceDetails) GetInstanceSystemId() string {
	if m != nil {
		return m.InstanceSystemId
	}
	return ""
}

func (m *PatchJobInstanceDetails) GetState() Instance_PatchState {
	if m != nil {
		return m.State
	}
	return Instance_PATCH_STATE_UNSPECIFIED
}

func (m *PatchJobInstanceDetails) GetFailureReason() string {
	if m != nil {
		return m.FailureReason
	}
	return ""
}

func (m *PatchJobInstanceDetails) GetAttemptCount() int64 {
	if m != nil {
		return m.AttemptCount
	}
	return 0
}

// Request to report the patch status for an instance.
type ReportPatchJobInstanceDetailsRequest struct {
	// The instance reporting its status in the form
	// `projects/*/zones/*/instances/*`
	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	// Required. The unique, system-generated identifier for the instance.
	//
	// This is the immutable, auto-generated ID assigned to the instance upon
	// creation. This is needed here because GCE instance names are not
	// tombstoned; it is possible to delete an instance and create a new one with
	// the same name; this provides a mechanism for this API to identify distinct
	// instances in this case.
	InstanceSystemId string `protobuf:"bytes,2,opt,name=instance_system_id,json=instanceSystemId,proto3" json:"instance_system_id,omitempty"`
	// Unique identifier of the patch job this request applies to.
	PatchJob string `protobuf:"bytes,3,opt,name=patch_job,json=patchJob,proto3" json:"patch_job,omitempty"`
	// State of current patch execution on the instance.
	State Instance_PatchState `protobuf:"varint,4,opt,name=state,proto3,enum=google.cloud.osconfig.v1alpha2.Instance_PatchState" json:"state,omitempty"`
	// Reason for failure.
	FailureReason string `protobuf:"bytes,6,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	// Number of times the agent attempted to apply the patch.
	AttemptCount int64 `protobuf:"varint,7,opt,name=attempt_count,json=attemptCount,proto3" json:"attempt_count,omitempty"`
	// This is the GCE instance identity token described in
	// https://cloud.google.com/compute/docs/instances/verifying-instance-identity
	// where the audience is 'osconfig.googleapis.com' and the format is 'full'.
	InstanceIdToken      string   `protobuf:"bytes,8,opt,name=instance_id_token,json=instanceIdToken,proto3" json:"instance_id_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportPatchJobInstanceDetailsRequest) Reset()         { *m = ReportPatchJobInstanceDetailsRequest{} }
func (m *ReportPatchJobInstanceDetailsRequest) String() string { return proto.CompactTextString(m) }
func (*ReportPatchJobInstanceDetailsRequest) ProtoMessage()    {}
func (*ReportPatchJobInstanceDetailsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{5}
}

func (m *ReportPatchJobInstanceDetailsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportPatchJobInstanceDetailsRequest.Unmarshal(m, b)
}
func (m *ReportPatchJobInstanceDetailsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportPatchJobInstanceDetailsRequest.Marshal(b, m, deterministic)
}
func (m *ReportPatchJobInstanceDetailsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportPatchJobInstanceDetailsRequest.Merge(m, src)
}
func (m *ReportPatchJobInstanceDetailsRequest) XXX_Size() int {
	return xxx_messageInfo_ReportPatchJobInstanceDetailsRequest.Size(m)
}
func (m *ReportPatchJobInstanceDetailsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportPatchJobInstanceDetailsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportPatchJobInstanceDetailsRequest proto.InternalMessageInfo

func (m *ReportPatchJobInstanceDetailsRequest) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *ReportPatchJobInstanceDetailsRequest) GetInstanceSystemId() string {
	if m != nil {
		return m.InstanceSystemId
	}
	return ""
}

func (m *ReportPatchJobInstanceDetailsRequest) GetPatchJob() string {
	if m != nil {
		return m.PatchJob
	}
	return ""
}

func (m *ReportPatchJobInstanceDetailsRequest) GetState() Instance_PatchState {
	if m != nil {
		return m.State
	}
	return Instance_PATCH_STATE_UNSPECIFIED
}

func (m *ReportPatchJobInstanceDetailsRequest) GetFailureReason() string {
	if m != nil {
		return m.FailureReason
	}
	return ""
}

func (m *ReportPatchJobInstanceDetailsRequest) GetAttemptCount() int64 {
	if m != nil {
		return m.AttemptCount
	}
	return 0
}

func (m *ReportPatchJobInstanceDetailsRequest) GetInstanceIdToken() string {
	if m != nil {
		return m.InstanceIdToken
	}
	return ""
}

// Response from reporting instance patch details. Includes information the
// agent needs to continue or stop patching.
type ReportPatchJobInstanceDetailsResponse struct {
	// Unique identifier for the current patch job.
	PatchJob string `protobuf:"bytes,1,opt,name=patch_job,json=patchJob,proto3" json:"patch_job,omitempty"`
	// Patch configuration the agent should apply.
	PatchConfig *PatchConfig `protobuf:"bytes,2,opt,name=patch_config,json=patchConfig,proto3" json:"patch_config,omitempty"`
	// State of the overall patch. If the patch is no longer active, the
	// agent should not begin a new patch step.
	PatchJobState ReportPatchJobInstanceDetailsResponse_PatchJobState `protobuf:"varint,3,opt,name=patch_job_state,json=patchJobState,proto3,enum=google.cloud.osconfig.v1alpha2.ReportPatchJobInstanceDetailsResponse_PatchJobState" json:"patch_job_state,omitempty"`
	// If this patch job is a dry run, the agent will report its status as it goes
	// through the motions but won't actually run any updates or perform any
	// reboots.
	DryRun               bool     `protobuf:"varint,4,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportPatchJobInstanceDetailsResponse) Reset()         { *m = ReportPatchJobInstanceDetailsResponse{} }
func (m *ReportPatchJobInstanceDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*ReportPatchJobInstanceDetailsResponse) ProtoMessage()    {}
func (*ReportPatchJobInstanceDetailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{6}
}

func (m *ReportPatchJobInstanceDetailsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportPatchJobInstanceDetailsResponse.Unmarshal(m, b)
}
func (m *ReportPatchJobInstanceDetailsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportPatchJobInstanceDetailsResponse.Marshal(b, m, deterministic)
}
func (m *ReportPatchJobInstanceDetailsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportPatchJobInstanceDetailsResponse.Merge(m, src)
}
func (m *ReportPatchJobInstanceDetailsResponse) XXX_Size() int {
	return xxx_messageInfo_ReportPatchJobInstanceDetailsResponse.Size(m)
}
func (m *ReportPatchJobInstanceDetailsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportPatchJobInstanceDetailsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportPatchJobInstanceDetailsResponse proto.InternalMessageInfo

func (m *ReportPatchJobInstanceDetailsResponse) GetPatchJob() string {
	if m != nil {
		return m.PatchJob
	}
	return ""
}

func (m *ReportPatchJobInstanceDetailsResponse) GetPatchConfig() *PatchConfig {
	if m != nil {
		return m.PatchConfig
	}
	return nil
}

func (m *ReportPatchJobInstanceDetailsResponse) GetPatchJobState() ReportPatchJobInstanceDetailsResponse_PatchJobState {
	if m != nil {
		return m.PatchJobState
	}
	return ReportPatchJobInstanceDetailsResponse_PATCH_JOB_STATE_UNSPECIFIED
}

func (m *ReportPatchJobInstanceDetailsResponse) GetDryRun() bool {
	if m != nil {
		return m.DryRun
	}
	return false
}

// A request message for listing patch jobs.
type ListPatchJobsRequest struct {
	// In the form of `projects/*`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The maximum number of instance status to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A pagination token returned from a previous call
	// that indicates where this listing should continue from.
	// This field is optional.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPatchJobsRequest) Reset()         { *m = ListPatchJobsRequest{} }
func (m *ListPatchJobsRequest) String() string { return proto.CompactTextString(m) }
func (*ListPatchJobsRequest) ProtoMessage()    {}
func (*ListPatchJobsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{7}
}

func (m *ListPatchJobsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPatchJobsRequest.Unmarshal(m, b)
}
func (m *ListPatchJobsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPatchJobsRequest.Marshal(b, m, deterministic)
}
func (m *ListPatchJobsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPatchJobsRequest.Merge(m, src)
}
func (m *ListPatchJobsRequest) XXX_Size() int {
	return xxx_messageInfo_ListPatchJobsRequest.Size(m)
}
func (m *ListPatchJobsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPatchJobsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPatchJobsRequest proto.InternalMessageInfo

func (m *ListPatchJobsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListPatchJobsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListPatchJobsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// A response message for listing patch jobs.
type ListPatchJobsResponse struct {
	// The list of patch jobs.
	PatchJobs []*PatchJob `protobuf:"bytes,1,rep,name=patch_jobs,json=patchJobs,proto3" json:"patch_jobs,omitempty"`
	// A pagination token that can be used to get the next page of results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPatchJobsResponse) Reset()         { *m = ListPatchJobsResponse{} }
func (m *ListPatchJobsResponse) String() string { return proto.CompactTextString(m) }
func (*ListPatchJobsResponse) ProtoMessage()    {}
func (*ListPatchJobsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{8}
}

func (m *ListPatchJobsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPatchJobsResponse.Unmarshal(m, b)
}
func (m *ListPatchJobsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPatchJobsResponse.Marshal(b, m, deterministic)
}
func (m *ListPatchJobsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPatchJobsResponse.Merge(m, src)
}
func (m *ListPatchJobsResponse) XXX_Size() int {
	return xxx_messageInfo_ListPatchJobsResponse.Size(m)
}
func (m *ListPatchJobsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPatchJobsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPatchJobsResponse proto.InternalMessageInfo

func (m *ListPatchJobsResponse) GetPatchJobs() []*PatchJob {
	if m != nil {
		return m.PatchJobs
	}
	return nil
}

func (m *ListPatchJobsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// A high level representation of a patch job that is either in progress
// or has completed.
//
// Instances' details are not included in the job. To paginate through instance
// details, use ListPatchJobInstanceDetails.
type PatchJob struct {
	// Output only. Unique identifier for this patch job in the form
	// `projects/*/patchJobs/*`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the patch job. Length of the description is limited
	// to 1024 characters.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Output only. Time this PatchJob was created.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. Last time this PatchJob was updated.
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Output only. The current state of the PatchJob.
	State PatchJob_State `protobuf:"varint,5,opt,name=state,proto3,enum=google.cloud.osconfig.v1alpha2.PatchJob_State" json:"state,omitempty"`
	// Required. There must be at least one instance to patch for this job
	// to succeed. This is the same filter used when listing compute instances.
	Filter string `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	// Patch configuration being applied.
	PatchConfig *PatchConfig `protobuf:"bytes,7,opt,name=patch_config,json=patchConfig,proto3" json:"patch_config,omitempty"`
	// Duration of the patch job. After the duration ends, the
	// patch job will time out.
	Duration *duration.Duration `protobuf:"bytes,8,opt,name=duration,proto3" json:"duration,omitempty"`
	// Summary of instance details.
	InstanceDetailsSummary *PatchJob_InstanceDetailsSummary `protobuf:"bytes,9,opt,name=instance_details_summary,json=instanceDetailsSummary,proto3" json:"instance_details_summary,omitempty"`
	// If this patch job is a dry run, the agent will report that it has
	// finished without running any updates on the VM.
	DryRun bool `protobuf:"varint,10,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	// If this patch job failed, this message will provide information about the
	// failure.
	ErrorMessage string `protobuf:"bytes,11,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Reflects the overall progress of the patch job in the range of
	// 0.0 being no progress to 100.0 being complete.
	PercentComplete      float64  `protobuf:"fixed64,12,opt,name=percent_complete,json=percentComplete,proto3" json:"percent_complete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PatchJob) Reset()         { *m = PatchJob{} }
func (m *PatchJob) String() string { return proto.CompactTextString(m) }
func (*PatchJob) ProtoMessage()    {}
func (*PatchJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{9}
}

func (m *PatchJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatchJob.Unmarshal(m, b)
}
func (m *PatchJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatchJob.Marshal(b, m, deterministic)
}
func (m *PatchJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatchJob.Merge(m, src)
}
func (m *PatchJob) XXX_Size() int {
	return xxx_messageInfo_PatchJob.Size(m)
}
func (m *PatchJob) XXX_DiscardUnknown() {
	xxx_messageInfo_PatchJob.DiscardUnknown(m)
}

var xxx_messageInfo_PatchJob proto.InternalMessageInfo

func (m *PatchJob) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PatchJob) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PatchJob) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *PatchJob) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *PatchJob) GetState() PatchJob_State {
	if m != nil {
		return m.State
	}
	return PatchJob_STATE_UNSPECIFIED
}

func (m *PatchJob) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *PatchJob) GetPatchConfig() *PatchConfig {
	if m != nil {
		return m.PatchConfig
	}
	return nil
}

func (m *PatchJob) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *PatchJob) GetInstanceDetailsSummary() *PatchJob_InstanceDetailsSummary {
	if m != nil {
		return m.InstanceDetailsSummary
	}
	return nil
}

func (m *PatchJob) GetDryRun() bool {
	if m != nil {
		return m.DryRun
	}
	return false
}

func (m *PatchJob) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *PatchJob) GetPercentComplete() float64 {
	if m != nil {
		return m.PercentComplete
	}
	return 0
}

// A summary of the current patch state across all instances this patch job
// affects. Contains counts of instances in different states. These states map
// to InstancePatchState. List patch job instance details to see the specific
// states of each instance.
type PatchJob_InstanceDetailsSummary struct {
	// Number of instances pending patch job.
	InstancesPending int64 `protobuf:"varint,1,opt,name=instances_pending,json=instancesPending,proto3" json:"instances_pending,omitempty"`
	// Number of instances that are inactive.
	InstancesInactive int64 `protobuf:"varint,2,opt,name=instances_inactive,json=instancesInactive,proto3" json:"instances_inactive,omitempty"`
	// Number of instances notified about patch job.
	InstancesNotified int64 `protobuf:"varint,3,opt,name=instances_notified,json=instancesNotified,proto3" json:"instances_notified,omitempty"`
	// Number of instances that have started.
	InstancesStarted int64 `protobuf:"varint,4,opt,name=instances_started,json=instancesStarted,proto3" json:"instances_started,omitempty"`
	// Number of instances that are downloading patches.
	InstancesDownloadingPatches int64 `protobuf:"varint,5,opt,name=instances_downloading_patches,json=instancesDownloadingPatches,proto3" json:"instances_downloading_patches,omitempty"`
	// Number of instances that are applying patches.
	InstancesApplyingPatches int64 `protobuf:"varint,6,opt,name=instances_applying_patches,json=instancesApplyingPatches,proto3" json:"instances_applying_patches,omitempty"`
	// Number of instances rebooting.
	InstancesRebooting int64 `protobuf:"varint,7,opt,name=instances_rebooting,json=instancesRebooting,proto3" json:"instances_rebooting,omitempty"`
	// Number of instances that have completed successfully.
	InstancesSucceeded int64 `protobuf:"varint,8,opt,name=instances_succeeded,json=instancesSucceeded,proto3" json:"instances_succeeded,omitempty"`
	// Number of instances that require reboot.
	InstancesSucceededRebootRequired int64 `protobuf:"varint,9,opt,name=instances_succeeded_reboot_required,json=instancesSucceededRebootRequired,proto3" json:"instances_succeeded_reboot_required,omitempty"`
	// Number of instances that failed.
	InstancesFailed int64 `protobuf:"varint,10,opt,name=instances_failed,json=instancesFailed,proto3" json:"instances_failed,omitempty"`
	// Number of instances that have acked and will start shortly.
	InstancesAcked int64 `protobuf:"varint,11,opt,name=instances_acked,json=instancesAcked,proto3" json:"instances_acked,omitempty"`
	// Number of instances that exceeded the time out while applying the patch.
	InstancesTimedOut int64 `protobuf:"varint,12,opt,name=instances_timed_out,json=instancesTimedOut,proto3" json:"instances_timed_out,omitempty"`
	// Number of instances that are running the pre-patch step.
	InstancesRunningPrePatchStep int64 `protobuf:"varint,13,opt,name=instances_running_pre_patch_step,json=instancesRunningPrePatchStep,proto3" json:"instances_running_pre_patch_step,omitempty"`
	// Number of instances that are running the post-patch step.
	InstancesRunningPostPatchStep int64    `protobuf:"varint,14,opt,name=instances_running_post_patch_step,json=instancesRunningPostPatchStep,proto3" json:"instances_running_post_patch_step,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *PatchJob_InstanceDetailsSummary) Reset()         { *m = PatchJob_InstanceDetailsSummary{} }
func (m *PatchJob_InstanceDetailsSummary) String() string { return proto.CompactTextString(m) }
func (*PatchJob_InstanceDetailsSummary) ProtoMessage()    {}
func (*PatchJob_InstanceDetailsSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{9, 0}
}

func (m *PatchJob_InstanceDetailsSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatchJob_InstanceDetailsSummary.Unmarshal(m, b)
}
func (m *PatchJob_InstanceDetailsSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatchJob_InstanceDetailsSummary.Marshal(b, m, deterministic)
}
func (m *PatchJob_InstanceDetailsSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatchJob_InstanceDetailsSummary.Merge(m, src)
}
func (m *PatchJob_InstanceDetailsSummary) XXX_Size() int {
	return xxx_messageInfo_PatchJob_InstanceDetailsSummary.Size(m)
}
func (m *PatchJob_InstanceDetailsSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_PatchJob_InstanceDetailsSummary.DiscardUnknown(m)
}

var xxx_messageInfo_PatchJob_InstanceDetailsSummary proto.InternalMessageInfo

func (m *PatchJob_InstanceDetailsSummary) GetInstancesPending() int64 {
	if m != nil {
		return m.InstancesPending
	}
	return 0
}

func (m *PatchJob_InstanceDetailsSummary) GetInstancesInactive() int64 {
	if m != nil {
		return m.InstancesInactive
	}
	return 0
}

func (m *PatchJob_InstanceDetailsSummary) GetInstancesNotified() int64 {
	if m != nil {
		return m.InstancesNotified
	}
	return 0
}

func (m *PatchJob_InstanceDetailsSummary) GetInstancesStarted() int64 {
	if m != nil {
		return m.InstancesStarted
	}
	return 0
}

func (m *PatchJob_InstanceDetailsSummary) GetInstancesDownloadingPatches() int64 {
	if m != nil {
		return m.InstancesDownloadingPatches
	}
	return 0
}

func (m *PatchJob_InstanceDetailsSummary) GetInstancesApplyingPatches() int64 {
	if m != nil {
		return m.InstancesApplyingPatches
	}
	return 0
}

func (m *PatchJob_InstanceDetailsSummary) GetInstancesRebooting() int64 {
	if m != nil {
		return m.InstancesRebooting
	}
	return 0
}

func (m *PatchJob_InstanceDetailsSummary) GetInstancesSucceeded() int64 {
	if m != nil {
		return m.InstancesSucceeded
	}
	return 0
}

func (m *PatchJob_InstanceDetailsSummary) GetInstancesSucceededRebootRequired() int64 {
	if m != nil {
		return m.InstancesSucceededRebootRequired
	}
	return 0
}

func (m *PatchJob_InstanceDetailsSummary) GetInstancesFailed() int64 {
	if m != nil {
		return m.InstancesFailed
	}
	return 0
}

func (m *PatchJob_InstanceDetailsSummary) GetInstancesAcked() int64 {
	if m != nil {
		return m.InstancesAcked
	}
	return 0
}

func (m *PatchJob_InstanceDetailsSummary) GetInstancesTimedOut() int64 {
	if m != nil {
		return m.InstancesTimedOut
	}
	return 0
}

func (m *PatchJob_InstanceDetailsSummary) GetInstancesRunningPrePatchStep() int64 {
	if m != nil {
		return m.InstancesRunningPrePatchStep
	}
	return 0
}

func (m *PatchJob_InstanceDetailsSummary) GetInstancesRunningPostPatchStep() int64 {
	if m != nil {
		return m.InstancesRunningPostPatchStep
	}
	return 0
}

// Patch configuration specifications. Contains details on specifically how to
// apply the patch(es) to an instance.
type PatchConfig struct {
	// Optional. Post-patch reboot settings.
	RebootConfig PatchConfig_RebootConfig `protobuf:"varint,1,opt,name=reboot_config,json=rebootConfig,proto3,enum=google.cloud.osconfig.v1alpha2.PatchConfig_RebootConfig" json:"reboot_config,omitempty"`
	// Optional. Retry strategy can be defined to have the agent retry patching
	// during the window if patching fails. If omitted, the agent will use its
	// default retry strategy.
	RetryStrategy *RetryStrategy `protobuf:"bytes,2,opt,name=retry_strategy,json=retryStrategy,proto3" json:"retry_strategy,omitempty"`
	// Apt update settings. Use this override the default apt patch rules.
	Apt *AptSettings `protobuf:"bytes,3,opt,name=apt,proto3" json:"apt,omitempty"`
	// Yum update settings. Use this override the default yum patch rules.
	Yum *YumSettings `protobuf:"bytes,4,opt,name=yum,proto3" json:"yum,omitempty"`
	// Goo update settings. Use this override the default goo patch rules.
	Goo *GooSettings `protobuf:"bytes,5,opt,name=goo,proto3" json:"goo,omitempty"`
	// Zypper update settings. Use this override the default zypper patch rules.
	Zypper *ZypperSettings `protobuf:"bytes,6,opt,name=zypper,proto3" json:"zypper,omitempty"`
	// Windows update settings. Use this override the default windows patch rules.
	WindowsUpdate *WindowsUpdateSettings `protobuf:"bytes,7,opt,name=windows_update,json=windowsUpdate,proto3" json:"windows_update,omitempty"`
	// Optional. The ExecStep to run before the patch update.
	PreStep *ExecStep `protobuf:"bytes,8,opt,name=pre_step,json=preStep,proto3" json:"pre_step,omitempty"`
	// Optional. The ExecStep to run after the patch update.
	PostStep             *ExecStep `protobuf:"bytes,9,opt,name=post_step,json=postStep,proto3" json:"post_step,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PatchConfig) Reset()         { *m = PatchConfig{} }
func (m *PatchConfig) String() string { return proto.CompactTextString(m) }
func (*PatchConfig) ProtoMessage()    {}
func (*PatchConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{10}
}

func (m *PatchConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatchConfig.Unmarshal(m, b)
}
func (m *PatchConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatchConfig.Marshal(b, m, deterministic)
}
func (m *PatchConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatchConfig.Merge(m, src)
}
func (m *PatchConfig) XXX_Size() int {
	return xxx_messageInfo_PatchConfig.Size(m)
}
func (m *PatchConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PatchConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PatchConfig proto.InternalMessageInfo

func (m *PatchConfig) GetRebootConfig() PatchConfig_RebootConfig {
	if m != nil {
		return m.RebootConfig
	}
	return PatchConfig_REBOOT_CONFIG_UNSPECIFIED
}

func (m *PatchConfig) GetRetryStrategy() *RetryStrategy {
	if m != nil {
		return m.RetryStrategy
	}
	return nil
}

func (m *PatchConfig) GetApt() *AptSettings {
	if m != nil {
		return m.Apt
	}
	return nil
}

func (m *PatchConfig) GetYum() *YumSettings {
	if m != nil {
		return m.Yum
	}
	return nil
}

func (m *PatchConfig) GetGoo() *GooSettings {
	if m != nil {
		return m.Goo
	}
	return nil
}

func (m *PatchConfig) GetZypper() *ZypperSettings {
	if m != nil {
		return m.Zypper
	}
	return nil
}

func (m *PatchConfig) GetWindowsUpdate() *WindowsUpdateSettings {
	if m != nil {
		return m.WindowsUpdate
	}
	return nil
}

func (m *PatchConfig) GetPreStep() *ExecStep {
	if m != nil {
		return m.PreStep
	}
	return nil
}

func (m *PatchConfig) GetPostStep() *ExecStep {
	if m != nil {
		return m.PostStep
	}
	return nil
}

// Namespace for Instance state enums.
type Instance struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Instance) Reset()         { *m = Instance{} }
func (m *Instance) String() string { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()    {}
func (*Instance) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{11}
}

func (m *Instance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instance.Unmarshal(m, b)
}
func (m *Instance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instance.Marshal(b, m, deterministic)
}
func (m *Instance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instance.Merge(m, src)
}
func (m *Instance) XXX_Size() int {
	return xxx_messageInfo_Instance.Size(m)
}
func (m *Instance) XXX_DiscardUnknown() {
	xxx_messageInfo_Instance.DiscardUnknown(m)
}

var xxx_messageInfo_Instance proto.InternalMessageInfo

// Message for canceling a patch job.
type CancelPatchJobRequest struct {
	// Name of the patch in the form `projects/*/patchJobs/*`
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelPatchJobRequest) Reset()         { *m = CancelPatchJobRequest{} }
func (m *CancelPatchJobRequest) String() string { return proto.CompactTextString(m) }
func (*CancelPatchJobRequest) ProtoMessage()    {}
func (*CancelPatchJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{12}
}

func (m *CancelPatchJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelPatchJobRequest.Unmarshal(m, b)
}
func (m *CancelPatchJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelPatchJobRequest.Marshal(b, m, deterministic)
}
func (m *CancelPatchJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelPatchJobRequest.Merge(m, src)
}
func (m *CancelPatchJobRequest) XXX_Size() int {
	return xxx_messageInfo_CancelPatchJobRequest.Size(m)
}
func (m *CancelPatchJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelPatchJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelPatchJobRequest proto.InternalMessageInfo

func (m *CancelPatchJobRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Apt patching will be performed by executing `apt-get update && apt-get
// upgrade`. Additional options can be set to control how this is executed.
type AptSettings struct {
	// Optional. By changing the type to DIST, the patching will be performed
	// using `apt-get dist-upgrade` instead.
	Type                 AptSettings_Type `protobuf:"varint,1,opt,name=type,proto3,enum=google.cloud.osconfig.v1alpha2.AptSettings_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AptSettings) Reset()         { *m = AptSettings{} }
func (m *AptSettings) String() string { return proto.CompactTextString(m) }
func (*AptSettings) ProtoMessage()    {}
func (*AptSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{13}
}

func (m *AptSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AptSettings.Unmarshal(m, b)
}
func (m *AptSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AptSettings.Marshal(b, m, deterministic)
}
func (m *AptSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AptSettings.Merge(m, src)
}
func (m *AptSettings) XXX_Size() int {
	return xxx_messageInfo_AptSettings.Size(m)
}
func (m *AptSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_AptSettings.DiscardUnknown(m)
}

var xxx_messageInfo_AptSettings proto.InternalMessageInfo

func (m *AptSettings) GetType() AptSettings_Type {
	if m != nil {
		return m.Type
	}
	return AptSettings_TYPE_UNSPECIFIED
}

// Yum patching will be performed by executing `yum update`. Additional options
// can be set to control how this is executed.
//
// Note that not all settings are supported on all platforms.
type YumSettings struct {
	// Optional. Adds the `--security` flag to `yum update`. Not supported on
	// all platforms.
	Security bool `protobuf:"varint,1,opt,name=security,proto3" json:"security,omitempty"`
	// Optional. Will cause patch to run `yum update-minimal` instead.
	Minimal bool `protobuf:"varint,2,opt,name=minimal,proto3" json:"minimal,omitempty"`
	// List of packages to exclude from update. These packages will be excluded by
	// using the yum `--exclude` flag.
	Excludes             []string `protobuf:"bytes,3,rep,name=excludes,proto3" json:"excludes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YumSettings) Reset()         { *m = YumSettings{} }
func (m *YumSettings) String() string { return proto.CompactTextString(m) }
func (*YumSettings) ProtoMessage()    {}
func (*YumSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{14}
}

func (m *YumSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YumSettings.Unmarshal(m, b)
}
func (m *YumSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YumSettings.Marshal(b, m, deterministic)
}
func (m *YumSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YumSettings.Merge(m, src)
}
func (m *YumSettings) XXX_Size() int {
	return xxx_messageInfo_YumSettings.Size(m)
}
func (m *YumSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_YumSettings.DiscardUnknown(m)
}

var xxx_messageInfo_YumSettings proto.InternalMessageInfo

func (m *YumSettings) GetSecurity() bool {
	if m != nil {
		return m.Security
	}
	return false
}

func (m *YumSettings) GetMinimal() bool {
	if m != nil {
		return m.Minimal
	}
	return false
}

func (m *YumSettings) GetExcludes() []string {
	if m != nil {
		return m.Excludes
	}
	return nil
}

// Googet patching is performed by running `googet update`.
type GooSettings struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GooSettings) Reset()         { *m = GooSettings{} }
func (m *GooSettings) String() string { return proto.CompactTextString(m) }
func (*GooSettings) ProtoMessage()    {}
func (*GooSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{15}
}

func (m *GooSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GooSettings.Unmarshal(m, b)
}
func (m *GooSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GooSettings.Marshal(b, m, deterministic)
}
func (m *GooSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GooSettings.Merge(m, src)
}
func (m *GooSettings) XXX_Size() int {
	return xxx_messageInfo_GooSettings.Size(m)
}
func (m *GooSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_GooSettings.DiscardUnknown(m)
}

var xxx_messageInfo_GooSettings proto.InternalMessageInfo

// Zypper patching is performed by running `zypper refresh && zypper update`
type ZypperSettings struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZypperSettings) Reset()         { *m = ZypperSettings{} }
func (m *ZypperSettings) String() string { return proto.CompactTextString(m) }
func (*ZypperSettings) ProtoMessage()    {}
func (*ZypperSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{16}
}

func (m *ZypperSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZypperSettings.Unmarshal(m, b)
}
func (m *ZypperSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZypperSettings.Marshal(b, m, deterministic)
}
func (m *ZypperSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZypperSettings.Merge(m, src)
}
func (m *ZypperSettings) XXX_Size() int {
	return xxx_messageInfo_ZypperSettings.Size(m)
}
func (m *ZypperSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_ZypperSettings.DiscardUnknown(m)
}

var xxx_messageInfo_ZypperSettings proto.InternalMessageInfo

// Windows patching is performed using the Windows Update Agent.
type WindowsUpdateSettings struct {
	// Only apply updates of these windows update classifications. If empty, all
	// updates will be applied.
	Classifications []WindowsUpdateSettings_Classification `protobuf:"varint,1,rep,packed,name=classifications,proto3,enum=google.cloud.osconfig.v1alpha2.WindowsUpdateSettings_Classification" json:"classifications,omitempty"`
	// Optional list of KBs to exclude from update.
	Excludes             []string `protobuf:"bytes,2,rep,name=excludes,proto3" json:"excludes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WindowsUpdateSettings) Reset()         { *m = WindowsUpdateSettings{} }
func (m *WindowsUpdateSettings) String() string { return proto.CompactTextString(m) }
func (*WindowsUpdateSettings) ProtoMessage()    {}
func (*WindowsUpdateSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{17}
}

func (m *WindowsUpdateSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WindowsUpdateSettings.Unmarshal(m, b)
}
func (m *WindowsUpdateSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WindowsUpdateSettings.Marshal(b, m, deterministic)
}
func (m *WindowsUpdateSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WindowsUpdateSettings.Merge(m, src)
}
func (m *WindowsUpdateSettings) XXX_Size() int {
	return xxx_messageInfo_WindowsUpdateSettings.Size(m)
}
func (m *WindowsUpdateSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_WindowsUpdateSettings.DiscardUnknown(m)
}

var xxx_messageInfo_WindowsUpdateSettings proto.InternalMessageInfo

func (m *WindowsUpdateSettings) GetClassifications() []WindowsUpdateSettings_Classification {
	if m != nil {
		return m.Classifications
	}
	return nil
}

func (m *WindowsUpdateSettings) GetExcludes() []string {
	if m != nil {
		return m.Excludes
	}
	return nil
}

// The strategy for retrying failed patches during the patch window.
type RetryStrategy struct {
	// If true, the agent will continue to try and patch until the window has
	// ended.
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetryStrategy) Reset()         { *m = RetryStrategy{} }
func (m *RetryStrategy) String() string { return proto.CompactTextString(m) }
func (*RetryStrategy) ProtoMessage()    {}
func (*RetryStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{18}
}

func (m *RetryStrategy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryStrategy.Unmarshal(m, b)
}
func (m *RetryStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryStrategy.Marshal(b, m, deterministic)
}
func (m *RetryStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryStrategy.Merge(m, src)
}
func (m *RetryStrategy) XXX_Size() int {
	return xxx_messageInfo_RetryStrategy.Size(m)
}
func (m *RetryStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_RetryStrategy proto.InternalMessageInfo

func (m *RetryStrategy) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

// A step that runs an executable for a PatchJob.
type ExecStep struct {
	// The ExecStepConfig for all Linux VMs targeted by the PatchJob.
	LinuxExecStepConfig *ExecStepConfig `protobuf:"bytes,1,opt,name=linux_exec_step_config,json=linuxExecStepConfig,proto3" json:"linux_exec_step_config,omitempty"`
	// The ExecStepConfig for all Windows VMs targeted by the PatchJob.
	WindowsExecStepConfig *ExecStepConfig `protobuf:"bytes,2,opt,name=windows_exec_step_config,json=windowsExecStepConfig,proto3" json:"windows_exec_step_config,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}        `json:"-"`
	XXX_unrecognized      []byte          `json:"-"`
	XXX_sizecache         int32           `json:"-"`
}

func (m *ExecStep) Reset()         { *m = ExecStep{} }
func (m *ExecStep) String() string { return proto.CompactTextString(m) }
func (*ExecStep) ProtoMessage()    {}
func (*ExecStep) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{19}
}

func (m *ExecStep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStep.Unmarshal(m, b)
}
func (m *ExecStep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStep.Marshal(b, m, deterministic)
}
func (m *ExecStep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStep.Merge(m, src)
}
func (m *ExecStep) XXX_Size() int {
	return xxx_messageInfo_ExecStep.Size(m)
}
func (m *ExecStep) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStep.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStep proto.InternalMessageInfo

func (m *ExecStep) GetLinuxExecStepConfig() *ExecStepConfig {
	if m != nil {
		return m.LinuxExecStepConfig
	}
	return nil
}

func (m *ExecStep) GetWindowsExecStepConfig() *ExecStepConfig {
	if m != nil {
		return m.WindowsExecStepConfig
	}
	return nil
}

// Common configurations for an ExecStep.
type ExecStepConfig struct {
	// Location of the executable.
	//
	// Types that are valid to be assigned to Executable:
	//	*ExecStepConfig_LocalPath
	//	*ExecStepConfig_GcsObject
	Executable isExecStepConfig_Executable `protobuf_oneof:"executable"`
	// Optional. Defaults to [0]. A list of possible return values that the
	// execution can return to indicate a success.
	AllowedSuccessCodes []int32 `protobuf:"varint,3,rep,packed,name=allowed_success_codes,json=allowedSuccessCodes,proto3" json:"allowed_success_codes,omitempty"`
	// The script interpreter to use to run the script. If no interpreter is
	// specified the script will be executed directly, which will likely
	// only succeed for scripts with shebang lines.
	// [Wikipedia shebang](https://en.wikipedia.org/wiki/Shebang_(Unix)).
	Interpreter          ExecStepConfig_Interpreter `protobuf:"varint,4,opt,name=interpreter,proto3,enum=google.cloud.osconfig.v1alpha2.ExecStepConfig_Interpreter" json:"interpreter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ExecStepConfig) Reset()         { *m = ExecStepConfig{} }
func (m *ExecStepConfig) String() string { return proto.CompactTextString(m) }
func (*ExecStepConfig) ProtoMessage()    {}
func (*ExecStepConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{20}
}

func (m *ExecStepConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStepConfig.Unmarshal(m, b)
}
func (m *ExecStepConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStepConfig.Marshal(b, m, deterministic)
}
func (m *ExecStepConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStepConfig.Merge(m, src)
}
func (m *ExecStepConfig) XXX_Size() int {
	return xxx_messageInfo_ExecStepConfig.Size(m)
}
func (m *ExecStepConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStepConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStepConfig proto.InternalMessageInfo

type isExecStepConfig_Executable interface {
	isExecStepConfig_Executable()
}

type ExecStepConfig_LocalPath struct {
	LocalPath string `protobuf:"bytes,1,opt,name=local_path,json=localPath,proto3,oneof"`
}

type ExecStepConfig_GcsObject struct {
	GcsObject *GcsObject `protobuf:"bytes,2,opt,name=gcs_object,json=gcsObject,proto3,oneof"`
}

func (*ExecStepConfig_LocalPath) isExecStepConfig_Executable() {}

func (*ExecStepConfig_GcsObject) isExecStepConfig_Executable() {}

func (m *ExecStepConfig) GetExecutable() isExecStepConfig_Executable {
	if m != nil {
		return m.Executable
	}
	return nil
}

func (m *ExecStepConfig) GetLocalPath() string {
	if x, ok := m.GetExecutable().(*ExecStepConfig_LocalPath); ok {
		return x.LocalPath
	}
	return ""
}

func (m *ExecStepConfig) GetGcsObject() *GcsObject {
	if x, ok := m.GetExecutable().(*ExecStepConfig_GcsObject); ok {
		return x.GcsObject
	}
	return nil
}

func (m *ExecStepConfig) GetAllowedSuccessCodes() []int32 {
	if m != nil {
		return m.AllowedSuccessCodes
	}
	return nil
}

func (m *ExecStepConfig) GetInterpreter() ExecStepConfig_Interpreter {
	if m != nil {
		return m.Interpreter
	}
	return ExecStepConfig_INTERPRETER_UNSPECIFIED
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ExecStepConfig) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ExecStepConfig_LocalPath)(nil),
		(*ExecStepConfig_GcsObject)(nil),
	}
}

// GCS object representation.
type GcsObject struct {
	// Bucket of the GCS object.
	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	// Name of the GCS object.
	Object string `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	// Generation number of the GCS object. This is used to ensure that the
	// ExecStep specified by this PatchJob does not change.
	GenerationNumber     int64    `protobuf:"varint,3,opt,name=generation_number,json=generationNumber,proto3" json:"generation_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GcsObject) Reset()         { *m = GcsObject{} }
func (m *GcsObject) String() string { return proto.CompactTextString(m) }
func (*GcsObject) ProtoMessage()    {}
func (*GcsObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_710d646b6c7874cc, []int{21}
}

func (m *GcsObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GcsObject.Unmarshal(m, b)
}
func (m *GcsObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GcsObject.Marshal(b, m, deterministic)
}
func (m *GcsObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GcsObject.Merge(m, src)
}
func (m *GcsObject) XXX_Size() int {
	return xxx_messageInfo_GcsObject.Size(m)
}
func (m *GcsObject) XXX_DiscardUnknown() {
	xxx_messageInfo_GcsObject.DiscardUnknown(m)
}

var xxx_messageInfo_GcsObject proto.InternalMessageInfo

func (m *GcsObject) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *GcsObject) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *GcsObject) GetGenerationNumber() int64 {
	if m != nil {
		return m.GenerationNumber
	}
	return 0
}

func init() {
	proto.RegisterEnum("google.cloud.osconfig.v1alpha2.ReportPatchJobInstanceDetailsResponse_PatchJobState", ReportPatchJobInstanceDetailsResponse_PatchJobState_name, ReportPatchJobInstanceDetailsResponse_PatchJobState_value)
	proto.RegisterEnum("google.cloud.osconfig.v1alpha2.PatchJob_State", PatchJob_State_name, PatchJob_State_value)
	proto.RegisterEnum("google.cloud.osconfig.v1alpha2.PatchConfig_RebootConfig", PatchConfig_RebootConfig_name, PatchConfig_RebootConfig_value)
	proto.RegisterEnum("google.cloud.osconfig.v1alpha2.Instance_PatchState", Instance_PatchState_name, Instance_PatchState_value)
	proto.RegisterEnum("google.cloud.osconfig.v1alpha2.AptSettings_Type", AptSettings_Type_name, AptSettings_Type_value)
	proto.RegisterEnum("google.cloud.osconfig.v1alpha2.WindowsUpdateSettings_Classification", WindowsUpdateSettings_Classification_name, WindowsUpdateSettings_Classification_value)
	proto.RegisterEnum("google.cloud.osconfig.v1alpha2.ExecStepConfig_Interpreter", ExecStepConfig_Interpreter_name, ExecStepConfig_Interpreter_value)
	proto.RegisterType((*ExecutePatchJobRequest)(nil), "google.cloud.osconfig.v1alpha2.ExecutePatchJobRequest")
	proto.RegisterType((*GetPatchJobRequest)(nil), "google.cloud.osconfig.v1alpha2.GetPatchJobRequest")
	proto.RegisterType((*ListPatchJobInstanceDetailsRequest)(nil), "google.cloud.osconfig.v1alpha2.ListPatchJobInstanceDetailsRequest")
	proto.RegisterType((*ListPatchJobInstanceDetailsResponse)(nil), "google.cloud.osconfig.v1alpha2.ListPatchJobInstanceDetailsResponse")
	proto.RegisterType((*PatchJobInstanceDetails)(nil), "google.cloud.osconfig.v1alpha2.PatchJobInstanceDetails")
	proto.RegisterType((*ReportPatchJobInstanceDetailsRequest)(nil), "google.cloud.osconfig.v1alpha2.ReportPatchJobInstanceDetailsRequest")
	proto.RegisterType((*ReportPatchJobInstanceDetailsResponse)(nil), "google.cloud.osconfig.v1alpha2.ReportPatchJobInstanceDetailsResponse")
	proto.RegisterType((*ListPatchJobsRequest)(nil), "google.cloud.osconfig.v1alpha2.ListPatchJobsRequest")
	proto.RegisterType((*ListPatchJobsResponse)(nil), "google.cloud.osconfig.v1alpha2.ListPatchJobsResponse")
	proto.RegisterType((*PatchJob)(nil), "google.cloud.osconfig.v1alpha2.PatchJob")
	proto.RegisterType((*PatchJob_InstanceDetailsSummary)(nil), "google.cloud.osconfig.v1alpha2.PatchJob.InstanceDetailsSummary")
	proto.RegisterType((*PatchConfig)(nil), "google.cloud.osconfig.v1alpha2.PatchConfig")
	proto.RegisterType((*Instance)(nil), "google.cloud.osconfig.v1alpha2.Instance")
	proto.RegisterType((*CancelPatchJobRequest)(nil), "google.cloud.osconfig.v1alpha2.CancelPatchJobRequest")
	proto.RegisterType((*AptSettings)(nil), "google.cloud.osconfig.v1alpha2.AptSettings")
	proto.RegisterType((*YumSettings)(nil), "google.cloud.osconfig.v1alpha2.YumSettings")
	proto.RegisterType((*GooSettings)(nil), "google.cloud.osconfig.v1alpha2.GooSettings")
	proto.RegisterType((*ZypperSettings)(nil), "google.cloud.osconfig.v1alpha2.ZypperSettings")
	proto.RegisterType((*WindowsUpdateSettings)(nil), "google.cloud.osconfig.v1alpha2.WindowsUpdateSettings")
	proto.RegisterType((*RetryStrategy)(nil), "google.cloud.osconfig.v1alpha2.RetryStrategy")
	proto.RegisterType((*ExecStep)(nil), "google.cloud.osconfig.v1alpha2.ExecStep")
	proto.RegisterType((*ExecStepConfig)(nil), "google.cloud.osconfig.v1alpha2.ExecStepConfig")
	proto.RegisterType((*GcsObject)(nil), "google.cloud.osconfig.v1alpha2.GcsObject")
}

func init() {
	proto.RegisterFile("google/cloud/osconfig/v1alpha2/patch_jobs.proto", fileDescriptor_710d646b6c7874cc)
}

var fileDescriptor_710d646b6c7874cc = []byte{
	// 2254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x59, 0x4f, 0x73, 0xdb, 0xc6,
	0x15, 0x0f, 0xff, 0x88, 0x22, 0x1f, 0x45, 0x0a, 0x5e, 0x47, 0x32, 0x2d, 0xd7, 0xb1, 0x0a, 0x37,
	0xa9, 0x5c, 0x37, 0x54, 0xa3, 0x4c, 0xa6, 0x9d, 0xa6, 0x9d, 0x0e, 0x05, 0x42, 0x36, 0x6c, 0x9a,
	0x64, 0x16, 0xa0, 0x3d, 0xce, 0xa4, 0x83, 0x81, 0x80, 0x15, 0x0d, 0x9b, 0x04, 0x10, 0x60, 0x61,
	0x99, 0xce, 0xb5, 0x87, 0x4e, 0x4f, 0xbd, 0xf4, 0xd0, 0xaf, 0xd0, 0x7b, 0x27, 0x1f, 0xa0, 0x5f,
	0xa0, 0xc7, 0xce, 0xf4, 0xda, 0x4f, 0xd0, 0x4b, 0xaf, 0x9d, 0x5d, 0x2c, 0x08, 0x90, 0x92, 0x4d,
	0x3a, 0x6d, 0x6e, 0xda, 0xf7, 0xde, 0xef, 0x61, 0xdf, 0x6f, 0xdf, 0x9f, 0x5d, 0x0a, 0x0e, 0xc7,
	0xbe, 0x3f, 0x9e, 0x90, 0x43, 0x7b, 0xe2, 0xc7, 0xce, 0xa1, 0x1f, 0xd9, 0xbe, 0x77, 0xe6, 0x8e,
	0x0f, 0x5f, 0x7e, 0x62, 0x4d, 0x82, 0x67, 0xd6, 0xd1, 0x61, 0x60, 0x51, 0xfb, 0x99, 0xf9, 0xdc,
	0x3f, 0x8d, 0xda, 0x41, 0xe8, 0x53, 0x1f, 0x7d, 0x90, 0x00, 0xda, 0x1c, 0xd0, 0x4e, 0x01, 0xed,
	0x14, 0xb0, 0xb7, 0x27, 0x1c, 0xba, 0xd6, 0xf4, 0xf0, 0xe5, 0x27, 0x87, 0x81, 0x3f, 0x71, 0xed,
	0x59, 0x82, 0xdd, 0x13, 0xd8, 0x43, 0xbe, 0x3a, 0x8d, 0xcf, 0x0e, 0x9d, 0x38, 0xb4, 0xa8, 0xeb,
	0x7b, 0x42, 0x7f, 0x6b, 0x59, 0x4f, 0xdd, 0x29, 0x89, 0xa8, 0x35, 0x0d, 0x12, 0x03, 0xf9, 0x0f,
	0x45, 0xd8, 0x55, 0x5f, 0x11, 0x3b, 0xa6, 0x64, 0xc8, 0x36, 0xf6, 0xc0, 0x3f, 0xc5, 0xe4, 0xeb,
	0x98, 0x44, 0x14, 0xed, 0x42, 0x25, 0xb0, 0x42, 0xe2, 0xd1, 0x56, 0x61, 0xbf, 0x70, 0x50, 0xc3,
	0x62, 0x85, 0xf6, 0xa1, 0xee, 0x90, 0xc8, 0x0e, 0xdd, 0x80, 0x7d, 0xa8, 0x55, 0xe4, 0xca, 0xbc,
	0x88, 0x21, 0xcf, 0xdc, 0x09, 0x25, 0x61, 0xab, 0x94, 0x20, 0x93, 0x15, 0xea, 0xc3, 0x56, 0x12,
	0x7d, 0x12, 0x62, 0xab, 0xbc, 0x5f, 0x38, 0xa8, 0x1f, 0xdd, 0x6d, 0xbf, 0x9d, 0x80, 0x36, 0xdf,
	0x98, 0xc2, 0x85, 0xb8, 0x1e, 0x64, 0x0b, 0xf4, 0x19, 0x54, 0xd3, 0x78, 0x5b, 0x1b, 0xdc, 0xd7,
	0xf5, 0xd4, 0x57, 0x1a, 0x70, 0xbb, 0x2b, 0x0c, 0xf0, 0xdc, 0x14, 0x5d, 0x83, 0x4d, 0x27, 0x9c,
	0x99, 0x61, 0xec, 0xb5, 0x2a, 0xfb, 0x85, 0x83, 0x2a, 0xae, 0x38, 0xe1, 0x0c, 0xc7, 0x9e, 0x7c,
	0x00, 0xe8, 0x1e, 0xa1, 0xcb, 0x3c, 0x20, 0x28, 0x7b, 0xd6, 0x94, 0x08, 0x16, 0xf8, 0xdf, 0xf2,
	0x1f, 0x0b, 0x20, 0xf7, 0xdc, 0x68, 0x6e, 0xab, 0x79, 0x11, 0xb5, 0x3c, 0x9b, 0x74, 0x09, 0xb5,
	0xdc, 0x49, 0xb4, 0x8a, 0xc2, 0x1b, 0x50, 0x0b, 0xac, 0x31, 0x31, 0x23, 0xf7, 0x35, 0xe1, 0x04,
	0x6e, 0xe0, 0x2a, 0x13, 0xe8, 0xee, 0x6b, 0x82, 0x6e, 0x02, 0x70, 0x25, 0xf5, 0x5f, 0x10, 0x4f,
	0x30, 0xc8, 0xcd, 0x0d, 0x26, 0xc8, 0x91, 0x5b, 0xce, 0x93, 0x2b, 0xff, 0xad, 0x00, 0xb7, 0xdf,
	0xba, 0xa5, 0x28, 0xf0, 0xbd, 0x88, 0x20, 0x0a, 0x7b, 0xf3, 0x14, 0x34, 0x5d, 0x61, 0x64, 0x3a,
	0x89, 0x55, 0xab, 0xb0, 0x5f, 0x3a, 0xa8, 0x1f, 0xfd, 0x7c, 0xad, 0x23, 0xb9, 0xe4, 0x23, 0xd7,
	0x82, 0xcb, 0x15, 0xe8, 0x23, 0xd8, 0xf6, 0xc8, 0x2b, 0x6a, 0xe6, 0x22, 0x4b, 0x12, 0xa7, 0xc1,
	0xc4, 0xc3, 0x34, 0x3a, 0xf9, 0xdf, 0x05, 0xb8, 0xf6, 0x06, 0xe7, 0x97, 0x1d, 0x04, 0xfa, 0x29,
	0xa0, 0x79, 0x0c, 0xd1, 0x2c, 0xa2, 0x64, 0x6a, 0xba, 0x8e, 0x70, 0x2d, 0xa5, 0x1a, 0x9d, 0x2b,
	0x34, 0x07, 0x69, 0xb0, 0x11, 0x51, 0x8b, 0x12, 0xce, 0x6a, 0xf3, 0xe8, 0xd3, 0x55, 0x61, 0xa6,
	0x3b, 0x48, 0xe2, 0xd5, 0x19, 0x14, 0x27, 0x1e, 0xd0, 0x87, 0xd0, 0x3c, 0xb3, 0xdc, 0x49, 0x1c,
	0x12, 0x33, 0x24, 0x56, 0xe4, 0x7b, 0xe2, 0x38, 0x1a, 0x42, 0x8a, 0xb9, 0x10, 0xdd, 0x86, 0x86,
	0x45, 0x29, 0x99, 0x06, 0xd4, 0xb4, 0xfd, 0xd8, 0xa3, 0x3c, 0x4f, 0x4b, 0x78, 0x4b, 0x08, 0x15,
	0x26, 0x93, 0xff, 0x5e, 0x84, 0x1f, 0x61, 0x12, 0xf8, 0xe1, 0xaa, 0x7c, 0xda, 0x83, 0x6a, 0x48,
	0x22, 0x3f, 0x0e, 0xed, 0x94, 0x85, 0xf9, 0xfa, 0x1d, 0x99, 0xe0, 0x19, 0x28, 0xb2, 0x40, 0xe4,
	0x58, 0x35, 0x3d, 0xbb, 0x8c, 0xa6, 0xf2, 0xf7, 0x40, 0x53, 0x65, 0x2d, 0x9a, 0x36, 0x2f, 0xd2,
	0x84, 0x7e, 0x02, 0x57, 0xe6, 0x11, 0xba, 0x8e, 0xc8, 0xa2, 0x2a, 0x77, 0xb7, 0x9d, 0x2a, 0x34,
	0x27, 0xc9, 0xa3, 0xff, 0x14, 0xe1, 0xc3, 0x15, 0x94, 0x8a, 0x7a, 0x58, 0x60, 0xa2, 0xb0, 0xc4,
	0xc4, 0x72, 0xc7, 0x2a, 0xfe, 0x8f, 0x1d, 0xeb, 0x1b, 0xd8, 0xce, 0x8a, 0x2f, 0x9f, 0x8a, 0xfa,
	0x2a, 0x97, 0x6b, 0x05, 0x33, 0xaf, 0xcb, 0xe4, 0x0c, 0x1a, 0x41, 0x7e, 0x99, 0xef, 0x7b, 0xe5,
	0x85, 0xbe, 0xf7, 0x10, 0x1a, 0x0b, 0x40, 0x74, 0x0b, 0x6e, 0x0c, 0x3b, 0x86, 0x72, 0xdf, 0x7c,
	0x30, 0x38, 0x36, 0x75, 0xa3, 0x63, 0xa8, 0xe6, 0xa8, 0xaf, 0x0f, 0x55, 0x45, 0x3b, 0xd1, 0xd4,
	0xae, 0xf4, 0x1e, 0x02, 0xa8, 0x74, 0x14, 0x43, 0x7b, 0xac, 0x4a, 0x05, 0xd4, 0x80, 0x9a, 0x32,
	0x78, 0x34, 0xec, 0xa9, 0x86, 0xda, 0x95, 0x8a, 0xf2, 0x73, 0x78, 0x3f, 0xdf, 0x86, 0xbe, 0xcf,
	0x5e, 0x28, 0xff, 0xbe, 0x00, 0x3b, 0x4b, 0x1f, 0x13, 0xa7, 0x7a, 0x8f, 0x01, 0xd3, 0x41, 0x2b,
	0xba, 0xda, 0xc1, 0xba, 0x5d, 0x0d, 0xd7, 0x52, 0xe2, 0xd6, 0x6f, 0x5c, 0xdf, 0x6e, 0x41, 0x35,
	0xc5, 0x5f, 0xda, 0xa9, 0x56, 0x8f, 0xcd, 0xcf, 0xa1, 0x6e, 0x87, 0xc4, 0xa2, 0xc4, 0x64, 0x53,
	0x9a, 0x47, 0x5b, 0x3f, 0xda, 0xbb, 0x30, 0xd1, 0x8c, 0x74, 0x84, 0x63, 0x48, 0xcc, 0x99, 0x80,
	0x81, 0xe3, 0xc0, 0x99, 0x83, 0xcb, 0xab, 0xc1, 0x89, 0x39, 0x07, 0x77, 0xd3, 0x82, 0xdf, 0xe0,
	0xc9, 0xd8, 0x5e, 0x97, 0xa8, 0xf6, 0x42, 0xad, 0x67, 0x93, 0xa9, 0xf2, 0xd6, 0xb1, 0xbf, 0xf9,
	0x7f, 0x1c, 0xfb, 0xd5, 0xf5, 0xc7, 0xfe, 0x0c, 0x5a, 0xcb, 0xe3, 0xce, 0x8c, 0xe2, 0xe9, 0xd4,
	0x0a, 0x67, 0xad, 0x1a, 0x77, 0xf3, 0x9b, 0xb5, 0xe3, 0x5e, 0xaa, 0x3f, 0x3d, 0x71, 0x83, 0x77,
	0xdd, 0x4b, 0xe5, 0xf9, 0xca, 0x83, 0x7c, 0xe5, 0xb1, 0xbe, 0x47, 0xc2, 0xd0, 0x0f, 0xcd, 0x29,
	0x89, 0x22, 0x6b, 0x4c, 0x5a, 0x75, 0xce, 0xdc, 0x16, 0x17, 0x3e, 0x4a, 0x64, 0xe8, 0x0e, 0x48,
	0x01, 0x09, 0x6d, 0xe2, 0xb1, 0xe6, 0x38, 0x0d, 0x26, 0x84, 0x92, 0xd6, 0xd6, 0x7e, 0xe1, 0xa0,
	0x80, 0xb7, 0x85, 0x5c, 0x11, 0xe2, 0xbd, 0x3f, 0x57, 0x60, 0xf7, 0xf2, 0xbd, 0xa1, 0xbb, 0x59,
	0xf7, 0x8c, 0xcc, 0x80, 0x78, 0x8e, 0xeb, 0x8d, 0x79, 0x82, 0x96, 0xb2, 0xf1, 0x10, 0x0d, 0x13,
	0x39, 0xfa, 0x38, 0x1b, 0x26, 0x91, 0xe9, 0x7a, 0x96, 0x4d, 0xdd, 0x97, 0x49, 0x75, 0x96, 0x70,
	0xe6, 0x46, 0x13, 0x8a, 0x45, 0x73, 0xcf, 0xa7, 0xee, 0x99, 0x4b, 0x1c, 0x9e, 0xc0, 0x79, 0xf3,
	0xbe, 0x50, 0x2c, 0x6e, 0x25, 0xa2, 0x56, 0x48, 0x89, 0xc3, 0x33, 0x36, 0xbf, 0x15, 0x3d, 0x91,
	0xa3, 0x63, 0xb8, 0x99, 0x19, 0x3b, 0xfe, 0xb9, 0x37, 0xf1, 0x2d, 0xb6, 0x47, 0x93, 0xa7, 0x04,
	0x89, 0xc4, 0x44, 0xbd, 0x31, 0x37, 0xea, 0x66, 0x36, 0xc3, 0xc4, 0x04, 0xfd, 0x0a, 0xf6, 0x32,
	0x1f, 0x56, 0x10, 0x4c, 0x66, 0x79, 0x07, 0x15, 0xee, 0x60, 0x9e, 0x1c, 0x51, 0x47, 0x18, 0xa4,
	0xe8, 0x43, 0xb8, 0x9a, 0xa1, 0x43, 0x72, 0xea, 0xfb, 0x94, 0x71, 0x97, 0x8c, 0xa8, 0x2c, 0x70,
	0x9c, 0x6a, 0x16, 0x01, 0x51, 0x6c, 0xdb, 0x84, 0x38, 0xc4, 0xe1, 0xb9, 0x9a, 0x07, 0xe8, 0xa9,
	0x06, 0x3d, 0x82, 0xdb, 0x97, 0x00, 0xc4, 0xb7, 0xcc, 0x90, 0x7c, 0x1d, 0xbb, 0x21, 0x71, 0x78,
	0x96, 0x96, 0xf0, 0xfe, 0x45, 0x07, 0xc9, 0xa7, 0xb1, 0xb0, 0x63, 0x09, 0x93, 0xb9, 0x63, 0x83,
	0x96, 0x38, 0x3c, 0xef, 0x4a, 0xd9, 0x9c, 0x8c, 0x4e, 0xb8, 0x18, 0xfd, 0x18, 0xb6, 0x73, 0xcc,
	0xd8, 0x2f, 0x88, 0xc3, 0x53, 0xb0, 0x84, 0x9b, 0x19, 0x1d, 0x4c, 0x8a, 0xda, 0xf9, 0x98, 0x58,
	0x8b, 0x71, 0x4c, 0x3f, 0xa6, 0x3c, 0x0f, 0xf3, 0x67, 0xcc, 0xda, 0x89, 0x33, 0x88, 0x29, 0x3a,
	0x81, 0xfd, 0x1c, 0x69, 0xb1, 0xe7, 0x71, 0xc6, 0x43, 0x92, 0xb0, 0x6e, 0x46, 0x94, 0x04, 0xad,
	0x06, 0x07, 0xff, 0x20, 0x63, 0x30, 0x31, 0x1b, 0x86, 0x44, 0x5c, 0x24, 0x48, 0x80, 0xee, 0xc3,
	0x0f, 0x2f, 0xf1, 0xe3, 0x47, 0x34, 0xef, 0xa8, 0xc9, 0x1d, 0xdd, 0xbc, 0xe0, 0xc8, 0x17, 0xa3,
	0x81, 0x79, 0x92, 0xff, 0x54, 0x80, 0x8d, 0x64, 0xbc, 0xed, 0xc0, 0x95, 0xcb, 0x86, 0x5a, 0x1d,
	0x36, 0x75, 0xa3, 0x83, 0xd9, 0x18, 0x2b, 0xa0, 0xab, 0xb0, 0xad, 0xf5, 0x75, 0xa3, 0xd3, 0x57,
	0x54, 0xb3, 0x37, 0x18, 0x3c, 0x1c, 0x0d, 0xa5, 0x22, 0x62, 0x3d, 0x9e, 0xcd, 0x45, 0xad, 0x7f,
	0x4f, 0x2a, 0xb1, 0xc1, 0xa7, 0x8f, 0x14, 0x45, 0x55, 0xbb, 0x6a, 0x57, 0x2a, 0xa3, 0xeb, 0xb0,
	0x33, 0x9f, 0x83, 0xe6, 0x13, 0xcd, 0xb8, 0x6f, 0xaa, 0x18, 0x0f, 0xb0, 0x2e, 0x6d, 0x30, 0x9c,
	0xc2, 0x3c, 0xf5, 0xd4, 0xae, 0x54, 0x61, 0x38, 0x43, 0x7b, 0xa4, 0x76, 0xcd, 0xc1, 0xc8, 0x90,
	0x36, 0xe5, 0xdf, 0x55, 0xa0, 0x9e, 0xeb, 0x75, 0xe8, 0xb7, 0xd0, 0x10, 0x07, 0x2f, 0xfa, 0x65,
	0x81, 0x37, 0xe5, 0x5f, 0xbc, 0x43, 0xbf, 0x6c, 0x27, 0x09, 0x21, 0x9a, 0xe7, 0x56, 0x98, 0x5b,
	0x21, 0x03, 0x9a, 0x21, 0xa1, 0xe1, 0xcc, 0x8c, 0x68, 0x68, 0x51, 0x32, 0x9e, 0x89, 0x4b, 0xcd,
	0xc7, 0xab, 0x6f, 0x20, 0x34, 0x9c, 0xe9, 0x02, 0x84, 0x1b, 0x61, 0x7e, 0x89, 0x7e, 0x0d, 0x25,
	0x2b, 0xa0, 0x62, 0x66, 0xad, 0x6c, 0xed, 0x9d, 0x80, 0xea, 0x84, 0xb2, 0x5a, 0x89, 0x30, 0xc3,
	0x31, 0xf8, 0x2c, 0x9e, 0xae, 0xfb, 0x20, 0x7c, 0x1a, 0x4f, 0x33, 0xf8, 0x2c, 0x9e, 0x32, 0xf8,
	0xd8, 0xf7, 0xc5, 0x1b, 0x70, 0x25, 0xfc, 0x9e, 0xef, 0x67, 0xf0, 0xb1, 0xef, 0xa3, 0x13, 0xa8,
	0xbc, 0x9e, 0x05, 0x81, 0x18, 0x5c, 0xf5, 0xd5, 0xf3, 0xef, 0x4b, 0x6e, 0x3d, 0x77, 0x22, 0xd0,
	0xe8, 0x2b, 0x68, 0x9e, 0xbb, 0x9e, 0xe3, 0x9f, 0x47, 0x66, 0x32, 0x5c, 0xc5, 0xa8, 0xfb, 0x6c,
	0x95, 0xbf, 0x27, 0x09, 0x6a, 0xc4, 0x41, 0x73, 0xb7, 0x8d, 0xf3, 0xbc, 0x18, 0x29, 0x50, 0x65,
	0xf5, 0xc3, 0x13, 0x3e, 0x19, 0x7b, 0x2b, 0x2f, 0x34, 0xec, 0x65, 0xcf, 0x72, 0x1f, 0x6f, 0x06,
	0x21, 0xe1, 0xe5, 0xa4, 0x42, 0x8d, 0x17, 0x0f, 0xf7, 0x52, 0x7b, 0x47, 0x2f, 0x55, 0x06, 0xe5,
	0xb5, 0xf4, 0x05, 0x6c, 0xe5, 0x53, 0x0c, 0xdd, 0x84, 0xeb, 0x58, 0x3d, 0x1e, 0x0c, 0x0c, 0x53,
	0x19, 0xf4, 0x4f, 0xb4, 0x7b, 0x17, 0x2b, 0xab, 0xab, 0x9e, 0x74, 0x46, 0x3d, 0x43, 0x2a, 0xf0,
	0xbb, 0x63, 0xef, 0x49, 0xe7, 0xa9, 0x2e, 0x15, 0x51, 0x0d, 0x36, 0xfa, 0xea, 0x63, 0x15, 0x4b,
	0x25, 0xf9, 0xdb, 0x22, 0x54, 0xd3, 0xd1, 0x25, 0xff, 0xa5, 0x08, 0x90, 0x3d, 0x26, 0xd0, 0x0d,
	0xb8, 0x96, 0xdc, 0x47, 0xdf, 0x50, 0xb6, 0x43, 0xb5, 0xdf, 0x65, 0x35, 0x59, 0x60, 0x95, 0xa6,
	0xf5, 0xc5, 0xd5, 0x94, 0xd7, 0x6b, 0x7f, 0x60, 0x24, 0x86, 0xa5, 0x7c, 0x7d, 0x97, 0xd1, 0x35,
	0xb8, 0xda, 0x1d, 0x3c, 0xe9, 0xf7, 0x06, 0x1d, 0x86, 0x34, 0xb9, 0x7b, 0x95, 0xd5, 0xea, 0xfb,
	0x20, 0x75, 0x86, 0xc3, 0xde, 0xd3, 0xbc, 0x94, 0xd7, 0x6c, 0x12, 0x20, 0xfb, 0xcc, 0xe6, 0x62,
	0xe9, 0x57, 0x59, 0xf8, 0xf3, 0xa5, 0x29, 0x88, 0xc0, 0xea, 0x17, 0x23, 0x0d, 0xab, 0x5d, 0xa9,
	0xc6, 0x22, 0x3e, 0xe9, 0x68, 0xac, 0xf8, 0x81, 0x45, 0xdc, 0x51, 0x1e, 0xaa, 0x5d, 0xa9, 0xbe,
	0xd8, 0x07, 0xb6, 0xd0, 0x1e, 0xec, 0xe2, 0x51, 0xbf, 0xcf, 0xbf, 0x8b, 0x55, 0x33, 0x0d, 0x58,
	0x1d, 0x4a, 0x0d, 0x46, 0xc0, 0x5c, 0x37, 0xd0, 0x8d, 0xbc, 0xb2, 0x29, 0xdf, 0x85, 0x1d, 0x85,
	0xb1, 0x36, 0x59, 0xe7, 0x97, 0x8b, 0x6f, 0xa0, 0x9e, 0xab, 0x3e, 0xd4, 0x85, 0x32, 0x9d, 0x05,
	0x44, 0xf4, 0x98, 0x9f, 0xbd, 0x43, 0xe1, 0xb6, 0x8d, 0x59, 0x40, 0x30, 0x47, 0xcb, 0x1f, 0x41,
	0x99, 0xad, 0x18, 0x77, 0xc6, 0xd3, 0xe1, 0xf2, 0x01, 0x55, 0xa1, 0xdc, 0xd5, 0x74, 0x43, 0x2a,
	0xc8, 0x26, 0xd4, 0x73, 0xb5, 0xcb, 0x9e, 0xb3, 0x11, 0xb1, 0xe3, 0xd0, 0xa5, 0x33, 0xbe, 0x81,
	0x2a, 0x9e, 0xaf, 0x51, 0x0b, 0x36, 0xa7, 0xae, 0xe7, 0x4e, 0xad, 0x09, 0xef, 0x4f, 0x55, 0x9c,
	0x2e, 0x19, 0x8a, 0xbc, 0xb2, 0x27, 0xb1, 0x43, 0xa2, 0x56, 0x69, 0xbf, 0xc4, 0xde, 0x6b, 0xe9,
	0x5a, 0x6e, 0x40, 0x3d, 0x57, 0xdd, 0xb2, 0x04, 0xcd, 0xc5, 0x52, 0x95, 0xff, 0x59, 0x84, 0x9d,
	0x4b, 0xab, 0x0d, 0x79, 0xb0, 0x6d, 0x4f, 0xac, 0x28, 0x72, 0xcf, 0x5c, 0x9b, 0x5f, 0x18, 0x93,
	0x67, 0x43, 0xf3, 0xa8, 0xfb, 0x9d, 0xaa, 0xb7, 0xad, 0x2c, 0x38, 0xc3, 0xcb, 0xce, 0x17, 0xc2,
	0x28, 0x2e, 0x85, 0xf1, 0xd7, 0x02, 0x34, 0x17, 0xf1, 0xe8, 0x03, 0xd8, 0x53, 0x7a, 0x1d, 0x5d,
	0xd7, 0x4e, 0x34, 0xa5, 0x63, 0x68, 0x83, 0xfe, 0x12, 0xc9, 0x6c, 0xc4, 0x60, 0xcd, 0xd0, 0x94,
	0x4e, 0x2f, 0x29, 0x03, 0x5d, 0x55, 0x46, 0x58, 0x33, 0x9e, 0x4a, 0x45, 0xd4, 0x04, 0xe8, 0xaa,
	0x27, 0x5a, 0x5f, 0x63, 0x38, 0xa9, 0xc4, 0xf2, 0xb1, 0x8b, 0x35, 0x56, 0x76, 0x65, 0x24, 0xc1,
	0xd6, 0x89, 0xda, 0x31, 0x46, 0x3c, 0xe3, 0x94, 0x87, 0xd2, 0x06, 0x93, 0xe8, 0x2a, 0x7e, 0xac,
	0x29, 0x42, 0x52, 0x61, 0x07, 0x68, 0x0c, 0x06, 0x3d, 0x69, 0x13, 0x5d, 0x81, 0xc6, 0x68, 0xd8,
	0x65, 0x35, 0x88, 0x07, 0xbd, 0xde, 0x68, 0x28, 0x55, 0x99, 0xb3, 0x44, 0x24, 0xd5, 0xe4, 0x3b,
	0xd0, 0x58, 0x98, 0x12, 0xec, 0x14, 0x89, 0x67, 0x9d, 0xb2, 0x0b, 0x48, 0x72, 0xc0, 0xe9, 0x52,
	0xfe, 0x47, 0x01, 0xaa, 0x69, 0x63, 0x41, 0x36, 0xec, 0x4e, 0x5c, 0x2f, 0x7e, 0x65, 0x92, 0x57,
	0xc4, 0xe6, 0xbd, 0x29, 0x3f, 0xfb, 0xd6, 0x68, 0xc8, 0xa9, 0x27, 0x31, 0xf1, 0xae, 0x72, 0x6f,
	0x8b, 0x42, 0x34, 0x86, 0x56, 0xda, 0x9d, 0x2f, 0x7c, 0xa6, 0xf8, 0x9d, 0x3e, 0xb3, 0x23, 0xfc,
	0x2d, 0x8a, 0xe5, 0x7f, 0x15, 0xa1, 0xb9, 0xf4, 0xed, 0x5b, 0x00, 0x13, 0xdf, 0xb6, 0x26, 0xec,
	0xd2, 0xf2, 0x2c, 0xa9, 0xc7, 0xfb, 0xef, 0xe1, 0x1a, 0x97, 0x0d, 0x2d, 0xfa, 0x0c, 0x3d, 0x00,
	0x18, 0xdb, 0x91, 0xe9, 0x9f, 0x3e, 0x27, 0x36, 0x15, 0xdb, 0xb9, 0xb3, 0x72, 0x90, 0xd9, 0xd1,
	0x80, 0x03, 0x98, 0xaf, 0x71, 0xba, 0x40, 0x47, 0xb0, 0x63, 0x4d, 0x26, 0xfe, 0x39, 0x71, 0x92,
	0xbb, 0x64, 0x14, 0x99, 0xb6, 0x9f, 0x56, 0xcb, 0x06, 0xbe, 0x2a, 0x94, 0x7a, 0xa2, 0x53, 0x98,
	0x0a, 0x7d, 0x05, 0x75, 0xd7, 0xa3, 0x24, 0x0c, 0x42, 0x92, 0xfe, 0xb4, 0xd8, 0x3c, 0xfa, 0xe5,
	0xbb, 0xf1, 0xd1, 0xd6, 0x32, 0x0f, 0x38, 0xef, 0x4e, 0x56, 0xa1, 0x9e, 0xd3, 0xb1, 0x6e, 0xa6,
	0xf5, 0x0d, 0x15, 0x0f, 0xb1, 0x6a, 0xa8, 0x78, 0x29, 0x91, 0x6b, 0xb0, 0xa1, 0xdf, 0x57, 0x7b,
	0x2c, 0x8b, 0x9b, 0x00, 0xc3, 0xc1, 0x13, 0x15, 0x27, 0xeb, 0xe2, 0xf1, 0x16, 0x00, 0xe1, 0xbf,
	0x55, 0xb3, 0x14, 0x92, 0x9f, 0x41, 0x6d, 0x4e, 0x00, 0x7b, 0x7b, 0x9e, 0xc6, 0xf6, 0x0b, 0x32,
	0xff, 0x75, 0x21, 0x59, 0x31, 0x79, 0x8e, 0xd3, 0x1a, 0x16, 0x2b, 0xf6, 0x04, 0x19, 0x13, 0x8f,
	0x24, 0x4f, 0x43, 0xd3, 0x8b, 0xa7, 0xa7, 0xe2, 0xd7, 0xea, 0x12, 0x96, 0x32, 0x45, 0x9f, 0xcb,
	0x8f, 0xcf, 0x41, 0xb6, 0xfd, 0xe9, 0x0a, 0x32, 0x8e, 0x6b, 0xf3, 0x5f, 0x21, 0xbe, 0x3c, 0x11,
	0xa6, 0x63, 0x7f, 0x62, 0x79, 0xe3, 0xb6, 0x1f, 0x8e, 0x0f, 0xc7, 0xc4, 0xe3, 0x8f, 0x53, 0xf1,
	0xef, 0x01, 0x2b, 0x70, 0xa3, 0x37, 0xfd, 0x8b, 0xe0, 0xf3, 0x54, 0x72, 0x5a, 0xe1, 0x90, 0x4f,
	0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x8e, 0xbb, 0x0a, 0x54, 0x18, 0x00, 0x00,
}
