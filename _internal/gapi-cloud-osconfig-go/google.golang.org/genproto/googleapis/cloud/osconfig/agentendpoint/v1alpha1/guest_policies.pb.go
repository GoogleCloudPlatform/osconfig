// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/osconfig/agentendpoint/v1alpha1/guest_policies.proto

package agentendpoint

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The desired state that the OS Config agent will maintain on the VM.
type DesiredState int32

const (
	// The default is to ensure the package is installed.
	DesiredState_DESIRED_STATE_UNSPECIFIED DesiredState = 0
	// The agent will ensure that the package is installed.
	DesiredState_INSTALLED DesiredState = 1
	// The agent will ensure that the package is installed and will
	// periodically check for and install any updates.
	DesiredState_UPDATED DesiredState = 2
	// The agent will ensure that the package is not installed and uninstall it
	// if detected.
	DesiredState_REMOVED DesiredState = 3
)

var DesiredState_name = map[int32]string{
	0: "DESIRED_STATE_UNSPECIFIED",
	1: "INSTALLED",
	2: "UPDATED",
	3: "REMOVED",
}

var DesiredState_value = map[string]int32{
	"DESIRED_STATE_UNSPECIFIED": 0,
	"INSTALLED":                 1,
	"UPDATED":                   2,
	"REMOVED":                   3,
}

func (x DesiredState) String() string {
	return proto.EnumName(DesiredState_name, int32(x))
}

func (DesiredState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2fa0294f7da3c92b, []int{0}
}

// Types of package managers that may be used to manage this package.
type Package_Manager int32

const (
	// The default behavior is ANY.
	Package_MANAGER_UNSPECIFIED Package_Manager = 0
	// Apply this package config using the default system package manager.
	Package_ANY Package_Manager = 1
	// Apply this package config only if Apt is available on the system.
	Package_APT Package_Manager = 2
	// Apply this package config only if Yum is available on the system.
	Package_YUM Package_Manager = 3
	// Apply this package config only if Zypper is available on the system.
	Package_ZYPPER Package_Manager = 4
	// Apply this package config only if GooGet is available on the system.
	Package_GOO Package_Manager = 5
)

var Package_Manager_name = map[int32]string{
	0: "MANAGER_UNSPECIFIED",
	1: "ANY",
	2: "APT",
	3: "YUM",
	4: "ZYPPER",
	5: "GOO",
}

var Package_Manager_value = map[string]int32{
	"MANAGER_UNSPECIFIED": 0,
	"ANY":                 1,
	"APT":                 2,
	"YUM":                 3,
	"ZYPPER":              4,
	"GOO":                 5,
}

func (x Package_Manager) String() string {
	return proto.EnumName(Package_Manager_name, int32(x))
}

func (Package_Manager) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2fa0294f7da3c92b, []int{0, 0}
}

// Type of archive.
type AptRepository_ArchiveType int32

const (
	// Unspecified.
	AptRepository_ARCHIVE_TYPE_UNSPECIFIED AptRepository_ArchiveType = 0
	// Deb indicates that the archive contains binary files.
	AptRepository_DEB AptRepository_ArchiveType = 1
	// Deb-src indicates that the archive contains source files.
	AptRepository_DEB_SRC AptRepository_ArchiveType = 2
)

var AptRepository_ArchiveType_name = map[int32]string{
	0: "ARCHIVE_TYPE_UNSPECIFIED",
	1: "DEB",
	2: "DEB_SRC",
}

var AptRepository_ArchiveType_value = map[string]int32{
	"ARCHIVE_TYPE_UNSPECIFIED": 0,
	"DEB":                      1,
	"DEB_SRC":                  2,
}

func (x AptRepository_ArchiveType) String() string {
	return proto.EnumName(AptRepository_ArchiveType_name, int32(x))
}

func (AptRepository_ArchiveType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2fa0294f7da3c92b, []int{1, 0}
}

// Package is a reference to the software package to be installed or removed.
// The agent on the VM will use the system package manager to apply the
// config.
//
//
// These are the commands that the agent will use to install or remove
// packages.
//
// Apt
// install: `apt-get update && apt-get -y install package1 package2 package3`
// remove: `apt-get -y remove package1 package2 package3`
//
// Yum
// install: `yum -y install package1 package2 package3`
// remove: `yum -y remove package1 package2 package3`
//
// Zypper
// install: `zypper install package1 package2 package3`
// remove: `zypper rm package1 package2`
//
// Googet
// install: `googet -noconfirm install package1 package2 package3`
// remove: `googet -noconfirm remove package1 package2 package3`
type Package struct {
	// The name of the package. A package is uniquely identified for conflict
	// validation by checking its name and the manager(s) it targets.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The desired_state the agent should maintain for this package. The
	// default is to ensure the package is installed.
	DesiredState DesiredState `protobuf:"varint,2,opt,name=desired_state,json=desiredState,proto3,enum=google.cloud.osconfig.agentendpoint.v1alpha1.DesiredState" json:"desired_state,omitempty"`
	// Type of package manager that can be used to install this package.
	// If a system does not have the package manager, the package will not be
	// installed/removed and there is no error. By default or when specifying ANY,
	// the agent will attempt to install and remove this package using the default
	// package manager. This is helpful when creating a policy that applies to
	// different types of systems.
	//
	// The default behavior is ANY.
	Manager              Package_Manager `protobuf:"varint,3,opt,name=manager,proto3,enum=google.cloud.osconfig.agentendpoint.v1alpha1.Package_Manager" json:"manager,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Package) Reset()         { *m = Package{} }
func (m *Package) String() string { return proto.CompactTextString(m) }
func (*Package) ProtoMessage()    {}
func (*Package) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fa0294f7da3c92b, []int{0}
}

func (m *Package) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Package.Unmarshal(m, b)
}
func (m *Package) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Package.Marshal(b, m, deterministic)
}
func (m *Package) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Package.Merge(m, src)
}
func (m *Package) XXX_Size() int {
	return xxx_messageInfo_Package.Size(m)
}
func (m *Package) XXX_DiscardUnknown() {
	xxx_messageInfo_Package.DiscardUnknown(m)
}

var xxx_messageInfo_Package proto.InternalMessageInfo

func (m *Package) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Package) GetDesiredState() DesiredState {
	if m != nil {
		return m.DesiredState
	}
	return DesiredState_DESIRED_STATE_UNSPECIFIED
}

func (m *Package) GetManager() Package_Manager {
	if m != nil {
		return m.Manager
	}
	return Package_MANAGER_UNSPECIFIED
}

// Represents a single apt package repository. These will be added to a repo
// file that will be managed at /etc/apt/sources.list.d/google_osconfig.list.
type AptRepository struct {
	// Type of archive files in this repository. The default behavior is DEB.
	ArchiveType AptRepository_ArchiveType `protobuf:"varint,1,opt,name=archive_type,json=archiveType,proto3,enum=google.cloud.osconfig.agentendpoint.v1alpha1.AptRepository_ArchiveType" json:"archive_type,omitempty"`
	// URI for this repository.
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// Distribution of this repository.
	Distribution string `protobuf:"bytes,3,opt,name=distribution,proto3" json:"distribution,omitempty"`
	// List of components for this repository. Must contain at least one item.
	Components []string `protobuf:"bytes,4,rep,name=components,proto3" json:"components,omitempty"`
	// URI of the key file for this repository. The agent will maintain
	// a keyring at /etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg containing
	// all the keys in any applied GuestPolicy.
	GpgKey               string   `protobuf:"bytes,5,opt,name=gpg_key,json=gpgKey,proto3" json:"gpg_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AptRepository) Reset()         { *m = AptRepository{} }
func (m *AptRepository) String() string { return proto.CompactTextString(m) }
func (*AptRepository) ProtoMessage()    {}
func (*AptRepository) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fa0294f7da3c92b, []int{1}
}

func (m *AptRepository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AptRepository.Unmarshal(m, b)
}
func (m *AptRepository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AptRepository.Marshal(b, m, deterministic)
}
func (m *AptRepository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AptRepository.Merge(m, src)
}
func (m *AptRepository) XXX_Size() int {
	return xxx_messageInfo_AptRepository.Size(m)
}
func (m *AptRepository) XXX_DiscardUnknown() {
	xxx_messageInfo_AptRepository.DiscardUnknown(m)
}

var xxx_messageInfo_AptRepository proto.InternalMessageInfo

func (m *AptRepository) GetArchiveType() AptRepository_ArchiveType {
	if m != nil {
		return m.ArchiveType
	}
	return AptRepository_ARCHIVE_TYPE_UNSPECIFIED
}

func (m *AptRepository) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *AptRepository) GetDistribution() string {
	if m != nil {
		return m.Distribution
	}
	return ""
}

func (m *AptRepository) GetComponents() []string {
	if m != nil {
		return m.Components
	}
	return nil
}

func (m *AptRepository) GetGpgKey() string {
	if m != nil {
		return m.GpgKey
	}
	return ""
}

// Represents a single yum package repository. These will be added to a repo
// file that will be managed at /etc/yum.repos.d/google_osconfig.repo.
type YumRepository struct {
	// A one word, unique name for this repository. This will be
	// the `repo id` in the yum config file and also the `display_name` if
	// `display_name` is omitted. This id is also used as the unique identifier
	// when checking for GuestPolicy conflicts.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The display name of the repository.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The location of the repository directory.
	BaseUrl string `protobuf:"bytes,3,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	// URIs of GPG keys.
	GpgKeys              []string `protobuf:"bytes,4,rep,name=gpg_keys,json=gpgKeys,proto3" json:"gpg_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YumRepository) Reset()         { *m = YumRepository{} }
func (m *YumRepository) String() string { return proto.CompactTextString(m) }
func (*YumRepository) ProtoMessage()    {}
func (*YumRepository) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fa0294f7da3c92b, []int{2}
}

func (m *YumRepository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YumRepository.Unmarshal(m, b)
}
func (m *YumRepository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YumRepository.Marshal(b, m, deterministic)
}
func (m *YumRepository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YumRepository.Merge(m, src)
}
func (m *YumRepository) XXX_Size() int {
	return xxx_messageInfo_YumRepository.Size(m)
}
func (m *YumRepository) XXX_DiscardUnknown() {
	xxx_messageInfo_YumRepository.DiscardUnknown(m)
}

var xxx_messageInfo_YumRepository proto.InternalMessageInfo

func (m *YumRepository) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *YumRepository) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *YumRepository) GetBaseUrl() string {
	if m != nil {
		return m.BaseUrl
	}
	return ""
}

func (m *YumRepository) GetGpgKeys() []string {
	if m != nil {
		return m.GpgKeys
	}
	return nil
}

// Represents a single zypper package repository. These will be added to a
// repo file that will be managed at /etc/zypp/repos.d/google_osconfig.repo.
type ZypperRepository struct {
	// A one word, unique name for this repository. This will be
	// the `repo id` in the zypper config file and also the `display_name` if
	// `display_name` is omitted. This id is also used as the unique identifier
	// when checking for GuestPolicy conflicts.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The display name of the repository.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The location of the repository directory.
	BaseUrl string `protobuf:"bytes,3,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	// URIs of GPG keys.
	GpgKeys              []string `protobuf:"bytes,4,rep,name=gpg_keys,json=gpgKeys,proto3" json:"gpg_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZypperRepository) Reset()         { *m = ZypperRepository{} }
func (m *ZypperRepository) String() string { return proto.CompactTextString(m) }
func (*ZypperRepository) ProtoMessage()    {}
func (*ZypperRepository) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fa0294f7da3c92b, []int{3}
}

func (m *ZypperRepository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZypperRepository.Unmarshal(m, b)
}
func (m *ZypperRepository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZypperRepository.Marshal(b, m, deterministic)
}
func (m *ZypperRepository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZypperRepository.Merge(m, src)
}
func (m *ZypperRepository) XXX_Size() int {
	return xxx_messageInfo_ZypperRepository.Size(m)
}
func (m *ZypperRepository) XXX_DiscardUnknown() {
	xxx_messageInfo_ZypperRepository.DiscardUnknown(m)
}

var xxx_messageInfo_ZypperRepository proto.InternalMessageInfo

func (m *ZypperRepository) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ZypperRepository) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *ZypperRepository) GetBaseUrl() string {
	if m != nil {
		return m.BaseUrl
	}
	return ""
}

func (m *ZypperRepository) GetGpgKeys() []string {
	if m != nil {
		return m.GpgKeys
	}
	return nil
}

// Represents a Goo package repository. These will be added to a repo file
// that will be managed at C:/ProgramData/GooGet/repos/google_osconfig.repo.
type GooRepository struct {
	// The name of the repository.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The url of the repository.
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GooRepository) Reset()         { *m = GooRepository{} }
func (m *GooRepository) String() string { return proto.CompactTextString(m) }
func (*GooRepository) ProtoMessage()    {}
func (*GooRepository) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fa0294f7da3c92b, []int{4}
}

func (m *GooRepository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GooRepository.Unmarshal(m, b)
}
func (m *GooRepository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GooRepository.Marshal(b, m, deterministic)
}
func (m *GooRepository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GooRepository.Merge(m, src)
}
func (m *GooRepository) XXX_Size() int {
	return xxx_messageInfo_GooRepository.Size(m)
}
func (m *GooRepository) XXX_DiscardUnknown() {
	xxx_messageInfo_GooRepository.DiscardUnknown(m)
}

var xxx_messageInfo_GooRepository proto.InternalMessageInfo

func (m *GooRepository) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GooRepository) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// A package repository.
type PackageRepository struct {
	// A specific type of repository.
	//
	// Types that are valid to be assigned to Repository:
	//	*PackageRepository_Apt
	//	*PackageRepository_Yum
	//	*PackageRepository_Zypper
	//	*PackageRepository_Goo
	Repository           isPackageRepository_Repository `protobuf_oneof:"repository"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *PackageRepository) Reset()         { *m = PackageRepository{} }
func (m *PackageRepository) String() string { return proto.CompactTextString(m) }
func (*PackageRepository) ProtoMessage()    {}
func (*PackageRepository) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fa0294f7da3c92b, []int{5}
}

func (m *PackageRepository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageRepository.Unmarshal(m, b)
}
func (m *PackageRepository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageRepository.Marshal(b, m, deterministic)
}
func (m *PackageRepository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageRepository.Merge(m, src)
}
func (m *PackageRepository) XXX_Size() int {
	return xxx_messageInfo_PackageRepository.Size(m)
}
func (m *PackageRepository) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageRepository.DiscardUnknown(m)
}

var xxx_messageInfo_PackageRepository proto.InternalMessageInfo

type isPackageRepository_Repository interface {
	isPackageRepository_Repository()
}

type PackageRepository_Apt struct {
	Apt *AptRepository `protobuf:"bytes,1,opt,name=apt,proto3,oneof"`
}

type PackageRepository_Yum struct {
	Yum *YumRepository `protobuf:"bytes,2,opt,name=yum,proto3,oneof"`
}

type PackageRepository_Zypper struct {
	Zypper *ZypperRepository `protobuf:"bytes,3,opt,name=zypper,proto3,oneof"`
}

type PackageRepository_Goo struct {
	Goo *GooRepository `protobuf:"bytes,4,opt,name=goo,proto3,oneof"`
}

func (*PackageRepository_Apt) isPackageRepository_Repository() {}

func (*PackageRepository_Yum) isPackageRepository_Repository() {}

func (*PackageRepository_Zypper) isPackageRepository_Repository() {}

func (*PackageRepository_Goo) isPackageRepository_Repository() {}

func (m *PackageRepository) GetRepository() isPackageRepository_Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *PackageRepository) GetApt() *AptRepository {
	if x, ok := m.GetRepository().(*PackageRepository_Apt); ok {
		return x.Apt
	}
	return nil
}

func (m *PackageRepository) GetYum() *YumRepository {
	if x, ok := m.GetRepository().(*PackageRepository_Yum); ok {
		return x.Yum
	}
	return nil
}

func (m *PackageRepository) GetZypper() *ZypperRepository {
	if x, ok := m.GetRepository().(*PackageRepository_Zypper); ok {
		return x.Zypper
	}
	return nil
}

func (m *PackageRepository) GetGoo() *GooRepository {
	if x, ok := m.GetRepository().(*PackageRepository_Goo); ok {
		return x.Goo
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PackageRepository) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PackageRepository_Apt)(nil),
		(*PackageRepository_Yum)(nil),
		(*PackageRepository_Zypper)(nil),
		(*PackageRepository_Goo)(nil),
	}
}

// A request message for getting the policies assigned to the instance.
type LookupEffectiveGuestPoliciesRequest struct {
	// Short name of the OS running on the instance. The OS Config agent will only
	// provide this field for targeting if OS Inventory is enabled for that
	// instance.
	OsShortName string `protobuf:"bytes,1,opt,name=os_short_name,json=osShortName,proto3" json:"os_short_name,omitempty"`
	// Version of the OS running on the instance. The OS Config agent will only
	// provide this field for targeting if OS Inventory is enabled for that
	// instance.
	OsVersion string `protobuf:"bytes,2,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	// Architecture of OS running on the instance. The OS Config agent will only
	// provide this field for targeting if OS Inventory is enabled for that
	// instance.
	OsArchitecture string `protobuf:"bytes,3,opt,name=os_architecture,json=osArchitecture,proto3" json:"os_architecture,omitempty"`
	// the project resource path of the instance.  i.e. projects/my-project
	Project string `protobuf:"bytes,4,opt,name=project,proto3" json:"project,omitempty"`
	// the zone of the instance.
	Zone string `protobuf:"bytes,5,opt,name=zone,proto3" json:"zone,omitempty"`
	// the instance name of the instance.
	InstanceName         string   `protobuf:"bytes,6,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupEffectiveGuestPoliciesRequest) Reset()         { *m = LookupEffectiveGuestPoliciesRequest{} }
func (m *LookupEffectiveGuestPoliciesRequest) String() string { return proto.CompactTextString(m) }
func (*LookupEffectiveGuestPoliciesRequest) ProtoMessage()    {}
func (*LookupEffectiveGuestPoliciesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fa0294f7da3c92b, []int{6}
}

func (m *LookupEffectiveGuestPoliciesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupEffectiveGuestPoliciesRequest.Unmarshal(m, b)
}
func (m *LookupEffectiveGuestPoliciesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupEffectiveGuestPoliciesRequest.Marshal(b, m, deterministic)
}
func (m *LookupEffectiveGuestPoliciesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupEffectiveGuestPoliciesRequest.Merge(m, src)
}
func (m *LookupEffectiveGuestPoliciesRequest) XXX_Size() int {
	return xxx_messageInfo_LookupEffectiveGuestPoliciesRequest.Size(m)
}
func (m *LookupEffectiveGuestPoliciesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupEffectiveGuestPoliciesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupEffectiveGuestPoliciesRequest proto.InternalMessageInfo

func (m *LookupEffectiveGuestPoliciesRequest) GetOsShortName() string {
	if m != nil {
		return m.OsShortName
	}
	return ""
}

func (m *LookupEffectiveGuestPoliciesRequest) GetOsVersion() string {
	if m != nil {
		return m.OsVersion
	}
	return ""
}

func (m *LookupEffectiveGuestPoliciesRequest) GetOsArchitecture() string {
	if m != nil {
		return m.OsArchitecture
	}
	return ""
}

func (m *LookupEffectiveGuestPoliciesRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *LookupEffectiveGuestPoliciesRequest) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *LookupEffectiveGuestPoliciesRequest) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

// Response with policy configs assigned to the instance.
type LookupEffectiveGuestPoliciesResponse struct {
	// List of package configurations assigned to the VM
	Packages []*LookupEffectiveGuestPoliciesResponse_SourcedPackage `protobuf:"bytes,1,rep,name=packages,proto3" json:"packages,omitempty"`
	// List of package repository configurations assigned to the VM.
	PackageRepositories  []*LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository `protobuf:"bytes,2,rep,name=package_repositories,json=packageRepositories,proto3" json:"package_repositories,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                         `json:"-"`
	XXX_unrecognized     []byte                                                           `json:"-"`
	XXX_sizecache        int32                                                            `json:"-"`
}

func (m *LookupEffectiveGuestPoliciesResponse) Reset()         { *m = LookupEffectiveGuestPoliciesResponse{} }
func (m *LookupEffectiveGuestPoliciesResponse) String() string { return proto.CompactTextString(m) }
func (*LookupEffectiveGuestPoliciesResponse) ProtoMessage()    {}
func (*LookupEffectiveGuestPoliciesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fa0294f7da3c92b, []int{7}
}

func (m *LookupEffectiveGuestPoliciesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupEffectiveGuestPoliciesResponse.Unmarshal(m, b)
}
func (m *LookupEffectiveGuestPoliciesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupEffectiveGuestPoliciesResponse.Marshal(b, m, deterministic)
}
func (m *LookupEffectiveGuestPoliciesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupEffectiveGuestPoliciesResponse.Merge(m, src)
}
func (m *LookupEffectiveGuestPoliciesResponse) XXX_Size() int {
	return xxx_messageInfo_LookupEffectiveGuestPoliciesResponse.Size(m)
}
func (m *LookupEffectiveGuestPoliciesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupEffectiveGuestPoliciesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupEffectiveGuestPoliciesResponse proto.InternalMessageInfo

func (m *LookupEffectiveGuestPoliciesResponse) GetPackages() []*LookupEffectiveGuestPoliciesResponse_SourcedPackage {
	if m != nil {
		return m.Packages
	}
	return nil
}

func (m *LookupEffectiveGuestPoliciesResponse) GetPackageRepositories() []*LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository {
	if m != nil {
		return m.PackageRepositories
	}
	return nil
}

// A GuestPolicy package including its source.
type LookupEffectiveGuestPoliciesResponse_SourcedPackage struct {
	// Name of the GuestPolicy providing this config.
	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// A software package to configure on the VM.
	Package              *Package `protobuf:"bytes,2,opt,name=package,proto3" json:"package,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackage) Reset() {
	*m = LookupEffectiveGuestPoliciesResponse_SourcedPackage{}
}
func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackage) String() string {
	return proto.CompactTextString(m)
}
func (*LookupEffectiveGuestPoliciesResponse_SourcedPackage) ProtoMessage() {}
func (*LookupEffectiveGuestPoliciesResponse_SourcedPackage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fa0294f7da3c92b, []int{7, 0}
}

func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupEffectiveGuestPoliciesResponse_SourcedPackage.Unmarshal(m, b)
}
func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupEffectiveGuestPoliciesResponse_SourcedPackage.Marshal(b, m, deterministic)
}
func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupEffectiveGuestPoliciesResponse_SourcedPackage.Merge(m, src)
}
func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackage) XXX_Size() int {
	return xxx_messageInfo_LookupEffectiveGuestPoliciesResponse_SourcedPackage.Size(m)
}
func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackage) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupEffectiveGuestPoliciesResponse_SourcedPackage.DiscardUnknown(m)
}

var xxx_messageInfo_LookupEffectiveGuestPoliciesResponse_SourcedPackage proto.InternalMessageInfo

func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackage) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackage) GetPackage() *Package {
	if m != nil {
		return m.Package
	}
	return nil
}

// A GuestPolicy package repository including its source.
type LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository struct {
	// Name of the GuestPolicy providing this config.
	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// A software package repository to configure on the VM.
	PackageRepository    *PackageRepository `protobuf:"bytes,2,opt,name=package_repository,json=packageRepository,proto3" json:"package_repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository) Reset() {
	*m = LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository{}
}
func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository) String() string {
	return proto.CompactTextString(m)
}
func (*LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository) ProtoMessage() {}
func (*LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fa0294f7da3c92b, []int{7, 1}
}

func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository.Unmarshal(m, b)
}
func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository.Marshal(b, m, deterministic)
}
func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository.Merge(m, src)
}
func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository) XXX_Size() int {
	return xxx_messageInfo_LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository.Size(m)
}
func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository.DiscardUnknown(m)
}

var xxx_messageInfo_LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository proto.InternalMessageInfo

func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository) GetPackageRepository() *PackageRepository {
	if m != nil {
		return m.PackageRepository
	}
	return nil
}

func init() {
	proto.RegisterEnum("google.cloud.osconfig.agentendpoint.v1alpha1.DesiredState", DesiredState_name, DesiredState_value)
	proto.RegisterEnum("google.cloud.osconfig.agentendpoint.v1alpha1.Package_Manager", Package_Manager_name, Package_Manager_value)
	proto.RegisterEnum("google.cloud.osconfig.agentendpoint.v1alpha1.AptRepository_ArchiveType", AptRepository_ArchiveType_name, AptRepository_ArchiveType_value)
	proto.RegisterType((*Package)(nil), "google.cloud.osconfig.agentendpoint.v1alpha1.Package")
	proto.RegisterType((*AptRepository)(nil), "google.cloud.osconfig.agentendpoint.v1alpha1.AptRepository")
	proto.RegisterType((*YumRepository)(nil), "google.cloud.osconfig.agentendpoint.v1alpha1.YumRepository")
	proto.RegisterType((*ZypperRepository)(nil), "google.cloud.osconfig.agentendpoint.v1alpha1.ZypperRepository")
	proto.RegisterType((*GooRepository)(nil), "google.cloud.osconfig.agentendpoint.v1alpha1.GooRepository")
	proto.RegisterType((*PackageRepository)(nil), "google.cloud.osconfig.agentendpoint.v1alpha1.PackageRepository")
	proto.RegisterType((*LookupEffectiveGuestPoliciesRequest)(nil), "google.cloud.osconfig.agentendpoint.v1alpha1.LookupEffectiveGuestPoliciesRequest")
	proto.RegisterType((*LookupEffectiveGuestPoliciesResponse)(nil), "google.cloud.osconfig.agentendpoint.v1alpha1.LookupEffectiveGuestPoliciesResponse")
	proto.RegisterType((*LookupEffectiveGuestPoliciesResponse_SourcedPackage)(nil), "google.cloud.osconfig.agentendpoint.v1alpha1.LookupEffectiveGuestPoliciesResponse.SourcedPackage")
	proto.RegisterType((*LookupEffectiveGuestPoliciesResponse_SourcedPackageRepository)(nil), "google.cloud.osconfig.agentendpoint.v1alpha1.LookupEffectiveGuestPoliciesResponse.SourcedPackageRepository")
}

func init() {
	proto.RegisterFile("google/cloud/osconfig/agentendpoint/v1alpha1/guest_policies.proto", fileDescriptor_2fa0294f7da3c92b)
}

var fileDescriptor_2fa0294f7da3c92b = []byte{
	// 952 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0xd1, 0x6e, 0xe3, 0x44,
	0x14, 0xad, 0x9d, 0x6e, 0xbc, 0xb9, 0x69, 0x8a, 0x77, 0x16, 0xb1, 0xde, 0x15, 0x8b, 0x8a, 0x17,
	0x89, 0x0a, 0x21, 0x87, 0x0d, 0xda, 0x17, 0x56, 0x80, 0x9c, 0xda, 0xa4, 0x11, 0x6d, 0x12, 0x4d,
	0xd2, 0x42, 0xfa, 0x62, 0xb9, 0xce, 0xd4, 0xf5, 0xd6, 0xf1, 0x0c, 0x1e, 0xbb, 0xc2, 0x8b, 0xf8,
	0x13, 0xc4, 0x03, 0xaf, 0x88, 0xbf, 0x42, 0x3c, 0xf2, 0x0d, 0x68, 0xc6, 0x4e, 0x9b, 0x74, 0x59,
	0xb4, 0x29, 0x42, 0xbc, 0xcd, 0x3d, 0xd6, 0x9c, 0x7b, 0xee, 0xbd, 0x67, 0x66, 0x0c, 0x76, 0x48,
	0x69, 0x18, 0x93, 0x76, 0x10, 0xd3, 0x7c, 0xd6, 0xa6, 0x3c, 0xa0, 0xc9, 0x59, 0x14, 0xb6, 0xfd,
	0x90, 0x24, 0x19, 0x49, 0x66, 0x8c, 0x46, 0x49, 0xd6, 0xbe, 0x7c, 0xea, 0xc7, 0xec, 0xdc, 0x7f,
	0xda, 0x0e, 0x73, 0xc2, 0x33, 0x8f, 0xd1, 0x38, 0x0a, 0x22, 0xc2, 0x2d, 0x96, 0xd2, 0x8c, 0xa2,
	0x8f, 0x4b, 0x0a, 0x4b, 0x52, 0x58, 0x0b, 0x0a, 0x6b, 0x85, 0xc2, 0x5a, 0x50, 0x98, 0xbf, 0xaa,
	0xa0, 0x8d, 0xfc, 0xe0, 0xc2, 0x0f, 0x09, 0x42, 0xb0, 0x99, 0xf8, 0x73, 0x62, 0x28, 0x3b, 0xca,
	0x6e, 0x03, 0xcb, 0x35, 0xf2, 0xa0, 0x35, 0x23, 0x3c, 0x4a, 0xc9, 0xcc, 0xe3, 0x99, 0x9f, 0x11,
	0x43, 0xdd, 0x51, 0x76, 0xb7, 0x3b, 0x9f, 0x59, 0xeb, 0x64, 0xb1, 0x9c, 0x92, 0x62, 0x2c, 0x18,
	0xf0, 0xd6, 0x6c, 0x29, 0x42, 0xdf, 0x80, 0x36, 0xf7, 0x13, 0x3f, 0x24, 0xa9, 0x51, 0x93, 0xd4,
	0x9f, 0xaf, 0x47, 0x5d, 0x89, 0xb7, 0x0e, 0x4b, 0x12, 0xbc, 0x60, 0x33, 0x31, 0x68, 0x15, 0x86,
	0x1e, 0xc0, 0xfd, 0x43, 0x7b, 0x60, 0xf7, 0x5c, 0xec, 0x1d, 0x0d, 0xc6, 0x23, 0x77, 0xaf, 0xff,
	0x55, 0xdf, 0x75, 0xf4, 0x0d, 0xa4, 0x41, 0xcd, 0x1e, 0x4c, 0x75, 0x45, 0x2e, 0x46, 0x13, 0x5d,
	0x15, 0x8b, 0xe9, 0xd1, 0xa1, 0x5e, 0x43, 0x00, 0xf5, 0x93, 0xe9, 0x68, 0xe4, 0x62, 0x7d, 0x53,
	0x80, 0xbd, 0xe1, 0x50, 0xbf, 0x63, 0xfe, 0xa6, 0x42, 0xcb, 0x66, 0x19, 0x26, 0x8c, 0xf2, 0x28,
	0xa3, 0x69, 0x81, 0x5e, 0xc0, 0x96, 0x9f, 0x06, 0xe7, 0xd1, 0x25, 0xf1, 0xb2, 0x82, 0x95, 0xbd,
	0xdb, 0xee, 0xf4, 0xd6, 0xab, 0x61, 0x85, 0xd2, 0xb2, 0x4b, 0xbe, 0x49, 0xc1, 0x08, 0x6e, 0xfa,
	0xd7, 0x01, 0xd2, 0xa1, 0x96, 0xa7, 0x91, 0x9c, 0x40, 0x03, 0x8b, 0x25, 0x32, 0x61, 0x6b, 0x16,
	0xf1, 0x2c, 0x8d, 0x4e, 0xf3, 0x2c, 0xa2, 0x89, 0xec, 0x60, 0x03, 0xaf, 0x60, 0xe8, 0x3d, 0x80,
	0x80, 0xce, 0x19, 0x4d, 0x48, 0x92, 0x71, 0x63, 0x73, 0xa7, 0xb6, 0xdb, 0xc0, 0x4b, 0x08, 0x7a,
	0x00, 0x5a, 0xc8, 0x42, 0xef, 0x82, 0x14, 0xc6, 0x1d, 0xb9, 0xbd, 0x1e, 0xb2, 0xf0, 0x6b, 0x52,
	0x98, 0x36, 0x34, 0x97, 0xa4, 0xa0, 0x77, 0xc1, 0xb0, 0xf1, 0xde, 0x7e, 0xff, 0xd8, 0xf5, 0x26,
	0xd3, 0x91, 0xfb, 0x6a, 0x27, 0x1d, 0xb7, 0xab, 0x2b, 0xa8, 0x09, 0x9a, 0xe3, 0x76, 0xbd, 0x31,
	0xde, 0xd3, 0x55, 0xf3, 0x7b, 0x68, 0x4d, 0xf3, 0xf9, 0x52, 0xbb, 0xb6, 0x41, 0x8d, 0x66, 0x95,
	0xc1, 0xd4, 0x68, 0x86, 0xde, 0x97, 0x05, 0xb0, 0xd8, 0x2f, 0x3c, 0x69, 0xbd, 0xb2, 0xb6, 0x66,
	0x85, 0x0d, 0x84, 0x03, 0x1f, 0xc2, 0xdd, 0x53, 0x9f, 0x13, 0x2f, 0x4f, 0xe3, 0xaa, 0x3e, 0x4d,
	0xc4, 0x47, 0x69, 0x2c, 0x3e, 0x55, 0xd2, 0x17, 0x85, 0x69, 0xa5, 0x76, 0x6e, 0xfe, 0x00, 0xfa,
	0x49, 0xc1, 0x18, 0x49, 0xff, 0x8f, 0xe4, 0xcf, 0xa0, 0xd5, 0xa3, 0x74, 0x29, 0xf3, 0xdf, 0x9d,
	0x2c, 0x39, 0xcd, 0xf8, 0x7a, 0x9a, 0xb1, 0xf9, 0xa7, 0x0a, 0xf7, 0x2a, 0x3b, 0x2f, 0xed, 0x1d,
	0x42, 0xcd, 0x67, 0x99, 0xdc, 0xda, 0xec, 0x3c, 0xff, 0x17, 0xc6, 0xda, 0xdf, 0xc0, 0x82, 0x49,
	0x10, 0x16, 0xf9, 0x5c, 0x26, 0x5e, 0x9b, 0x70, 0x65, 0x9a, 0x82, 0xb0, 0xc8, 0xe7, 0xe8, 0x5b,
	0xa8, 0xbf, 0x94, 0xbd, 0x96, 0x2d, 0x6a, 0x76, 0xbe, 0x58, 0x8f, 0xf3, 0xe6, 0x9c, 0xf6, 0x37,
	0x70, 0xc5, 0x27, 0xa4, 0x86, 0x94, 0x1a, 0x9b, 0xb7, 0x91, 0xba, 0x32, 0x01, 0x21, 0x35, 0xa4,
	0xb4, 0xbb, 0x05, 0x90, 0x5e, 0x81, 0xe6, 0xef, 0x0a, 0x3c, 0x39, 0xa0, 0xf4, 0x22, 0x67, 0xee,
	0xd9, 0x19, 0x09, 0xb2, 0xe8, 0x92, 0xf4, 0xc4, 0x95, 0x3a, 0xaa, 0x6e, 0x54, 0x4c, 0xbe, 0x13,
	0x21, 0x32, 0xa1, 0x45, 0xb9, 0xc7, 0xcf, 0x69, 0x9a, 0x79, 0x4b, 0x73, 0x6c, 0x52, 0x3e, 0x16,
	0x98, 0x74, 0xca, 0x63, 0x00, 0xca, 0xbd, 0x4b, 0x92, 0x72, 0x71, 0x10, 0xcb, 0xa9, 0x36, 0x28,
	0x3f, 0x2e, 0x01, 0xf4, 0x21, 0xbc, 0x45, 0xb9, 0x27, 0x4f, 0x73, 0x46, 0x82, 0x2c, 0x4f, 0x49,
	0xe5, 0xa7, 0x6d, 0xca, 0xed, 0x25, 0x14, 0x19, 0xa0, 0xb1, 0x94, 0xbe, 0x20, 0x41, 0x26, 0xcb,
	0x6e, 0xe0, 0x45, 0x28, 0x4c, 0xf4, 0x92, 0x26, 0xa4, 0x3a, 0xa5, 0x72, 0x8d, 0x9e, 0x40, 0x2b,
	0x4a, 0x78, 0xe6, 0x27, 0x01, 0x29, 0x95, 0xd5, 0xcb, 0x1b, 0x60, 0x01, 0x0a, 0x69, 0xe6, 0x1f,
	0x9b, 0xf0, 0xc1, 0x3f, 0x97, 0xc9, 0x19, 0x4d, 0x38, 0x41, 0x3f, 0xc2, 0x5d, 0x56, 0xfa, 0x8f,
	0x1b, 0xca, 0x4e, 0x6d, 0xb7, 0xd9, 0xf1, 0xd7, 0xeb, 0xf9, 0x9b, 0x64, 0xb1, 0xc6, 0x34, 0x4f,
	0x03, 0x32, 0x5b, 0x38, 0xfd, 0x2a, 0x25, 0xfa, 0x59, 0x81, 0xb7, 0xab, 0xc0, 0xbb, 0x9a, 0x52,
	0x44, 0xb8, 0xa1, 0x4a, 0x2d, 0x17, 0xff, 0xbd, 0x96, 0x2b, 0x6b, 0xe0, 0xfb, 0xec, 0x06, 0x14,
	0x11, 0xfe, 0xa8, 0x80, 0xed, 0xd5, 0x0d, 0xe8, 0x1d, 0xa8, 0x73, 0x89, 0x54, 0x96, 0xa8, 0x22,
	0x34, 0x04, 0xad, 0x22, 0xa8, 0xce, 0xd9, 0xb3, 0x5b, 0xbd, 0x6a, 0x78, 0xc1, 0xf2, 0xe8, 0x17,
	0x05, 0x8c, 0xd7, 0x89, 0x7d, 0xad, 0x8a, 0x04, 0xd0, 0x2b, 0xfd, 0x2c, 0x2a, 0x41, 0x5f, 0xde,
	0x4e, 0xd0, 0x75, 0x87, 0xee, 0xdd, 0xec, 0x50, 0xf1, 0xd1, 0x31, 0x6c, 0x2d, 0xbf, 0xf4, 0xe8,
	0x31, 0x3c, 0x74, 0xdc, 0x71, 0x1f, 0xbb, 0x8e, 0x37, 0x9e, 0xd8, 0x93, 0x9b, 0x6f, 0x46, 0x0b,
	0x1a, 0xfd, 0xc1, 0x78, 0x62, 0x1f, 0x1c, 0xb8, 0x4e, 0xf9, 0x72, 0x1c, 0x8d, 0x1c, 0x7b, 0xe2,
	0x3a, 0xba, 0x2a, 0x02, 0xec, 0x1e, 0x0e, 0x8f, 0x5d, 0x47, 0xaf, 0x75, 0x7f, 0x52, 0xe0, 0x93,
	0x80, 0xce, 0xd7, 0x52, 0xdc, 0x6d, 0xad, 0x4c, 0xfc, 0x64, 0x5a, 0x6d, 0x0e, 0x69, 0xec, 0x27,
	0xa1, 0x45, 0xd3, 0xb0, 0x1d, 0x92, 0x44, 0xfe, 0x32, 0xb5, 0xcb, 0x4f, 0x3e, 0x8b, 0xf8, 0x9b,
	0xfd, 0x78, 0x3d, 0x5f, 0x81, 0x4f, 0xeb, 0x92, 0xe5, 0xd3, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x48, 0x28, 0xe5, 0x64, 0xbd, 0x09, 0x00, 0x00,
}
